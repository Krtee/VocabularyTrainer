{"version":3,"sources":["components/LogInForms.js","components/SignUpButton.js","api.js","pages/Landing.js","components/ReducedNavigation.js","components/LanguageButton.js","pages/Languages.js","components/NavigationTop.js","components/VocabRow.js","components/NavigationBottom.js","pages/VocabularyList.js","pages/AddVocabulary.js","components/VocabularyTraining_Options.js","components/VocabularyTraining_Queries.js","components/SummaryRow.js","components/VocabularyTraining_Summary.js","pages/VocabularyTraining.js","pages/Settings.js","Router.js","App.js","index.js","assets/icons/003-plus.svg","assets/icons/007-bearbeiten.svg","assets/icons/005-liste.svg"],"names":["LogInForms","props","state","userName","password","passwordRepeat","userNameHelp","passwordHelp","passwordRepeatHelp","handleChange","bind","handleSubmit","event","target","value","name","this","setState","preventDefault","createUser","login","noAccount","className","onSubmit","id","htmlFor","type","placeholder","defaultValue","onChange","React","Component","SignUpButton","handleClick","emptyHelpFields","buttonText","onClick","url","data","a","axios","post","console","error","fetchUsers","get","editUser","userId","patch","getVocabs","res","insertVocab","getVocabAndTranslation","getVocabsById","getLanguages","getProgress","getProgressByVocabId","params","filterProgress","query","increaseRGIAR","resetRGIAR","increaseProgress","getProgressForUserAndLanguage","insert","getVocab","getVocabById","Landing","useGlobal","auth","setAuth","setUser","useState","setUserNameHelp","setPasswordHelp","setPasswordRepeatHelp","input","usernameAlreadyTaken","then","taken","validateCreateUser","signUpDataComplete","checkIfUserNameAvailable","info","userInfo","username","PromiseB","resolve","reject","api","status","allUsers","existingUser","getUser","undefined","logInDataComplete","length","i","log","passwordCorrect","authenticateUser","_id","userData","Map","forEach","user","set","to","ReducedNavigation","Navbar","expand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","LanguageButton","language","getLanguage","setLangID","setLangName","Languages","langName","langID","languages","setLanguages","redirect","setRedirect","useEffect","group","groupEnd","pathname","map","key","NavigationTop","NavItem","Divider","vocab_id","lang_id","VocabRow","prog","progress","vocab","setVocab","translation","NavigationBottom","active1","setActive1","active2","setActive2","active3","setActive3","page","Container","Row","Col","src","train","width","height","alt","plus","overview","user_id","VocabularyList","setProg","mapProgress","word","AddVocabulary","textinput","createRef","color","setColor","setInfo","loading","setLoading","addVocab","language_id","english_word","current","success","ref","disabled","role","VocabularyTraining_Options","vocabNumber","setVocabNumber","progress1","setProgress1","progress2","setProgress2","progress3","setProgress3","training_options_radios","setTraining_options_radios","showButton","receiveInput","checked","VocabularyTraining_Queries","trainingVorab","setTrainingVorab","iterate","setIterate","setInput","summary","setSummary","message","setMessage","help","setHelp","falseInputCount","setFalseInputCount","getTrainingVocab","currentWord","localSummary","push","idObj","toLowerCase","trim","progressObj","right_guesses_in_a_row","translationByDirection","direction","sortedVocab","numberOfVocab","numberOfVocabs","ids","vocabFromDb","vocabChoice","resetMessageIn5s","number","Math","floor","random","includes","setTimeout","inputValue","vocabID","SummaryRow","correct","setProgress","VocabularyTraining_Summary","entry","VocabularyTraining","showOptions","setShowOptions","showQueries","setShowQueries","showSummary","setShowSummary","buttonState","setButtonState","setButtonText","savedSettings","setSavedSettings","setNumberOfVocab","setDirection","changeView","progressArray","show","Settings","newName","newProgress","setShow","changed","setChanged","handleClose","changeInformation","toSend","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Routes","exact","path","component","App","Router","setGlobal","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d1292df4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass LogInForms extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { userName: \"\", password: \"\", passwordRepeat: \"\", userNameHelp: \"\", passwordHelp: \"\", passwordRepeatHelp: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { createUser, login } = this.props;\r\n\r\n    switch (event.target.name) {\r\n      case \"noAccount\":\r\n        createUser(this.state);\r\n\r\n        break;\r\n\r\n      default:\r\n        login(this.state);\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { noAccount } = this.props;\r\n    const { userNameHelp } = this.props;\r\n    const { passwordHelp } = this.props;\r\n    const { passwordRepeatHelp } = this.props;\r\n\r\n    if (noAccount) {\r\n      return (\r\n        <fieldset className=\"box\">\r\n          <form onSubmit={this.handleSubmit} name=\"noAccount\" id=\"signUpForm\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-username\">\r\n                User name\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12\">\r\n                <input\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"login-username\"\r\n                  placeholder=\"Choose a user name\"\r\n                  defaultValue={this.state.userName}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{userNameHelp}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n                Password\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12\">\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"login-password\"\r\n                  placeholder=\"Choose a password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{passwordHelp}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n                Repeat password\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12\">\r\n                <input\r\n                  name=\"passwordRepeat\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"login-password\"\r\n                  placeholder=\"Repeat password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{passwordRepeatHelp}</small>\r\n              </div>\r\n            </div>\r\n            <input type=\"submit\" value=\"Sign Up\" className=\"btn btn-primary\" />\r\n          </form>\r\n        </fieldset>\r\n      );\r\n    } else {\r\n      return (\r\n        <fieldset className=\"box\">\r\n          <form onSubmit={this.handleSubmit} name=\"hasAccount\" id=\"logInForm\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-username\">\r\n                User name\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12\">\r\n                <input\r\n                  type=\"username\"\r\n                  className=\"form-control\"\r\n                  id=\"login-username\"\r\n                  placeholder=\"Enter user name\"\r\n                  name=\"userName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{userNameHelp}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n                Password\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"login-password\"\r\n                  placeholder=\"Enter password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{passwordHelp}</small>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Log in\r\n            </button>\r\n          </form>\r\n        </fieldset>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LogInForms;\r\n","import React from \"react\";\r\nimport LogInForms from \"./LogInForms\";\r\n\r\nclass SignUpButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { noAccount: false, buttonText: \"No account?\" };\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { emptyHelpFields } = this.props;\r\n        emptyHelpFields();\r\n        if (this.state.noAccount === false) {\r\n            this.setState({\r\n                noAccount: true,\r\n                buttonText: \"Already got an account?\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                noAccount: false,\r\n                buttonText: \"No account?\"\r\n            });\r\n            emptyHelpFields();\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { createUser, login } = this.props;\r\n        const { userNameHelp } = this.props;\r\n        const { passwordHelp } = this.props;\r\n        const { passwordRepeatHelp } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <LogInForms noAccount={this.state.noAccount} createUser={createUser} login={login} userNameHelp={userNameHelp} passwordHelp={passwordHelp} passwordRepeatHelp={passwordRepeatHelp}/>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary marginleft margin_top grey_button\"\r\n                    onClick={this.handleClick}\r\n                >\r\n                    {this.state.buttonText}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpButton;\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\n// constants\r\nconst url = \"http://localhost:8080\";\r\n\r\n// User -------------------------------------------------------------\r\n\r\nconst createUser = async (data) => {\r\n  try {\r\n    return axios.post(`${url}/Users`, data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst fetchUsers = async () => {\r\n  try {\r\n    return await axios.get(`${url}/Users`);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst editUser = async (userId,data) => {\r\n  try {\r\n    return await axios.patch(`${url}/Users/${userId}`,{data})\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\n\r\n// Vocab ------------------------------------------------------------\r\n\r\nconst getVocabs = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst insertVocab = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/insert`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getVocabAndTranslation = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getVocabAndTranslation`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst getVocabsById = async (id) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getByIdArray`, id);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Language ---------------------------------------------------------\r\n\r\nconst getLanguages = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Languages`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Progress ---------------------------------------------------------\r\n\r\nconst getProgress = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/getProgress`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getProgressByVocabId = async (id) => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/getProgressByVocabId`, {params: {id: id}});\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst filterProgress = async (query) => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/filterProgress`,  {params: query});\r\n    return res.data\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst increaseRGIAR = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/increaseRGIAR`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst resetRGIAR = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/resetRGIAR`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst increaseProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/increaseProgress`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getProgressForUserAndLanguage = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getProgressForUserAndLanguage`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n\r\nexport default {\r\n  language: {\r\n    getLanguages: () => getLanguages(),\r\n  },\r\n  user: {\r\n    createUser: (data) => createUser(data),\r\n    fetchUsers: () => fetchUsers(),\r\n    editUser: (id,data) => editUser(id,data)\r\n  },\r\n  vocab: {\r\n    insert: (data) => insertVocab(data),\r\n    getVocab: () => getVocabs(),\r\n    getVocabAndTranslation: (data) => getVocabAndTranslation(data),\r\n    getVocabById: (id) => getVocabsById(id)\r\n  },\r\n  progress: {\r\n    getProgress: () => getProgress(),\r\n    getProgressByVocabId: (id) => getProgressByVocabId(id),\r\n    filterProgress: (id) => filterProgress(id),\r\n    getProgressForUserAndLanguage: (data) => getProgressForUserAndLanguage(data),\r\n    increaseRGIAR: (data) => increaseRGIAR(data),\r\n    resetRGIAR: (data) => resetRGIAR(data),\r\n    increaseProgress: (data) => increaseProgress(data),\r\n  }\r\n};\r\n","import React, {useGlobal, useState} from \"reactn\";\r\nimport SignUpButton from \"../components/SignUpButton\";\r\nimport \"../style.css\";\r\nimport api from \"../api\";\r\nimport PromiseB from \"bluebird\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction Landing() {\r\n    const [auth, setAuth] = useGlobal(\"auth\");\r\n    const [, setUser] = useGlobal(\"user\");\r\n    const [userNameHelp, setUserNameHelp] = useState(\"\");\r\n    const [passwordHelp, setPasswordHelp] = useState(\"\");\r\n    const [passwordRepeatHelp, setPasswordRepeatHelp] = useState(\"\");\r\n\r\n    async function createUser(input) {\r\n        const userName = input.userName ? input.userName : null;\r\n        const password = input.password ? input.password : null;\r\n        const passwordRepeat = input.passwordRepeat ? input.passwordRepeat : null;\r\n        emptyHelpFields();\r\n        usernameAlreadyTaken(userName).then((taken) => validateCreateUser(userName, taken, password, passwordRepeat));\r\n    }\r\n\r\n    async function validateCreateUser(userName, usernameAlreadyTaken, password, passwordRepeat) {\r\n        if (signUpDataComplete(userName, password, passwordRepeat)) {\r\n            if (usernameAlreadyTaken) {\r\n                setUserNameHelp(\"Username is already taken. Please choose a different one.\");\r\n            }\r\n            if (password !== passwordRepeat) {\r\n                setPasswordHelp(\"Passwords don't match\");\r\n                setPasswordRepeatHelp(\"Passwords don't match\");\r\n            } else {\r\n                const isAvailable = await checkIfUserNameAvailable(userName);\r\n                if (isAvailable) {\r\n                    console.info(\"Saving...\", {userName, password, passwordRepeat});\r\n\r\n                    const userInfo = {\r\n                        username: userName,\r\n                        password: password,\r\n                    };\r\n\r\n                    return new PromiseB(async (resolve, reject) => {\r\n                        const res = await api.user.createUser(userInfo);\r\n                        if (res.status === 200) {\r\n                            setAuth(true);\r\n                            return resolve(res.data);\r\n                        }\r\n                        setAuth(false);\r\n                        return reject(\"Something went wrong\");\r\n                    });\r\n                } else {\r\n                    setUserNameHelp(\"Username already exists!\")\r\n                }\r\n            }\r\n        } else {\r\n            if (userName == null) {\r\n                setUserNameHelp(\"Please enter a user name\");\r\n            }\r\n            if (password == null) {\r\n                setPasswordHelp(\"Please enter a password\");\r\n            }\r\n            if (passwordRepeat == null) {\r\n                setPasswordRepeatHelp(\"Please repeat the password\");\r\n            }\r\n        }\r\n    }\r\n\r\n    async function usernameAlreadyTaken(userName) {\r\n        var allUsers = await api.user.fetchUsers();\r\n        var {data} = allUsers.data;\r\n        var existingUser = getUser(userName, data);\r\n        return !(existingUser === undefined);\r\n    }\r\n\r\n    function signUpDataComplete(userName, password, passwordRepeat) {\r\n        if (userName != null && password != null && passwordRepeat != null) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function logInDataComplete(userName, password) {\r\n        if (userName.length > 0 && password.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function emptyHelpFields() {\r\n        setUserNameHelp(\"\");\r\n        setPasswordHelp(\"\");\r\n        setPasswordRepeatHelp(\"\");\r\n    }\r\n\r\n    async function checkIfUserNameAvailable(userName) {\r\n        const allUsers = await api.user.fetchUsers().then((res) => {\r\n            return res.data.data;\r\n        });\r\n        for (let i = 0; i < allUsers.length; i++) {\r\n            const element = allUsers[i];\r\n            if (element.username === userName) {\r\n                console.log(\"username already exists\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function login(input) {\r\n        try {\r\n            new PromiseB(async (resolve, reject) => {\r\n                const res = await api.user.fetchUsers();\r\n                if (res.status === 200) {\r\n                    const {data} = res.data;\r\n                    const userInfo = getUser(input.userName, data);\r\n\r\n                    var passwordCorrect = false;\r\n                    emptyHelpFields();\r\n\r\n                    if (logInDataComplete(input.userName, input.password)) {\r\n                        if (userInfo != null) {\r\n                            passwordCorrect = authenticateUser(userInfo, input.password);\r\n                        }\r\n                        if (!passwordCorrect) {\r\n                            setPasswordHelp(\"Wrong user name or password\");\r\n                        } else {\r\n                            setUser(userInfo._id);\r\n                        }\r\n                    } else {\r\n                        if (input.userName.length === 0) {\r\n                            setUserNameHelp(\"Please enter your user name\");\r\n                        }\r\n                        if (input.password.length === 0) {\r\n                            setPasswordHelp(\"Please enter your password\");\r\n                        }\r\n                    }\r\n\r\n                    setAuth(passwordCorrect);\r\n                    return resolve(res.data);\r\n                }\r\n                setAuth(false);\r\n                return reject(\"Something went wrong\");\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function getUser(userName, data) {\r\n        try {\r\n            const userData = new Map();\r\n            data.forEach((user) => {\r\n                userData.set(user.username, user);\r\n            });\r\n            return userData.get(userName);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function authenticateUser(userInfo, password) {\r\n        try {\r\n            return userInfo.password === password;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {auth ? <Redirect to=\"/languages\"/> : null}\r\n            <h1>Vocabulary Trainer</h1>\r\n            <h2>Log in or sign up!</h2>\r\n            <SignUpButton\r\n                createUser={createUser}\r\n                login={login}\r\n                emptyHelpFields={emptyHelpFields}\r\n                userNameHelp={userNameHelp}\r\n                passwordHelp={passwordHelp}\r\n                passwordRepeatHelp={passwordRepeatHelp}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useGlobal } from \"reactn\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nconst ReducedNavigation = () => {\r\n  const [, setAuth] = useGlobal(\"auth\");\r\n  function handleClick() {\r\n    setAuth(false);\r\n  }\r\n  return (\r\n<Navbar expand=\"*\" id=\"navbar\">\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={'ml-auto'}/>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" className=\"menu_option\">\r\n            <NavDropdown.Item className=\"menu_option\">\r\n              <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                Logout\r\n              </button>\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default ReducedNavigation;\r\n","import React, { useGlobal} from \"reactn\";\r\n\r\n\r\nconst LanguageButton = (props) => {\r\n  const { language, id } = props.language;\r\n  const { getLanguage } = props;\r\n\r\n  const [, setLangID] = useGlobal(\"langID\");\r\n  const [, setLangName] = useGlobal(\"langName\");\r\n\r\n  const handleSubmitLocal = (event) => {\r\n    event.preventDefault();\r\n    getLanguage(id, language);\r\n    setLangID(id);\r\n    setLangName(language);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-4\">\r\n      <form onSubmit={handleSubmitLocal}>\r\n        <input type=\"hidden\" value={language} name=\"language\"></input>\r\n        <button type=\"submit\" className=\"btn btn-primary margin_top col-lg-12 languages_option\">\r\n          {language}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageButton;","import \"../style.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReducedNavigation from \"../components/ReducedNavigation\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useGlobal } from \"reactn\";\r\nimport api from \"../api\";\r\nimport LanguageButton from \"../components/LanguageButton\";\r\n\r\nconst getLanguages = async () => {\r\n  const res = await api.language.getLanguages();\r\n  return res;\r\n};\r\n\r\nconst Languages = () => {\r\n  const [auth, ] = useGlobal(\"auth\");\r\n  const [langName, setLangName] = useGlobal(\"langName\");\r\n  const [langID, setLangID] = useGlobal(\"langID\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getLanguages().then((data) => setLanguages(data));\r\n  }, []);\r\n\r\n  if (!auth) {\r\n    console.info(\"redirecting\");\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const getLanguage = (langID, langName) => {\r\n    console.group(\"Language\");\r\n      console.log(\"%c langID \", \"Background: #0CE66E\", langID);\r\n      console.log(\"%c langName \", \"Background: #0CE6E2\", langName);\r\n    console.groupEnd();\r\n    setLangName(langName);\r\n    setLangID(langID);\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={{ pathname: `/VocabularyList`, query: { langName, langID } }} />;\r\n  }\r\n\r\n  var i = 0;\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <ReducedNavigation />\r\n      <h1>Languages</h1>\r\n      <h2>Select the language you want to practise.</h2>\r\n      <div className=\"row box\">\r\n        {languages.map((language) => {\r\n          return <LanguageButton key={i++} language={language} getLanguage={getLanguage}  />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Languages;\r\n\r\n","import React, { useGlobal } from \"reactn\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\n\r\nconst NavigationTop = () => {\r\n  const [, setAuth] = useGlobal(\"auth\");\r\n  function handleClick() {\r\n    setAuth(false);\r\n  }\r\n\r\n  return (\r\n    <Navbar expand=\"*\" id=\"navbar\">\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={'ml-auto'} />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n            <NavItem className=\"menu_padding\">\r\n              <Link to=\"/Languages\" className=\"menu_option\">\r\n                Change language\r\n            </Link>{\" \"}\r\n            </NavItem>\r\n            <NavItem className=\"menu_padding\">\r\n              <Link to=\"/Settings\" className=\"menu_option\">\r\n                Settings\r\n            </Link>{\" \"}\r\n            </NavItem>\r\n            <NavDropdown.Divider />\r\n\r\n            <NavDropdown.Item className=\"menu_option\">\r\n              <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                Logout\r\n              </button>\r\n            </NavDropdown.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavigationTop;\r\n","import React, { useState, useGlobal, useEffect } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\n\r\nconst getVocabAndTranslation = async (vocab_id, lang_id) => {\r\n\r\n  const data = {\r\n    vocab_id: vocab_id,\r\n    lang_id: lang_id,\r\n  };\r\n\r\n\r\n  const res = await api.vocab.getVocabAndTranslation(data);\r\n  return res;\r\n};\r\n\r\nconst VocabRow = (props) => {\r\n  const { vocab_id, progress } = props.prog;\r\n  const [vocab, setVocab] = useState([]);\r\n  const [langID, ] = useGlobal(\"langID\");\r\n\r\n  useEffect(() => {\r\n    getVocabAndTranslation(vocab_id, langID).then((data) => setVocab(data));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"row vocabulary_list_entry\">\r\n      <div className=\"col-xl-1 col-lg-2 col-md-3 col-4 vocabulary_list_english\">{vocab.vocab}</div>\r\n      <div className=\"col-xl-2 col-lg-2 col-md-3 col-4 vocabulary_list_foreign\">{vocab.translation}</div>\r\n      <div className=\"col-xl-1 col-lg-2 col-md-3 col-4 vocabulary_list_progress\">{progress}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabRow;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport plus from '../assets/icons/003-plus.svg';\r\nimport train from '../assets/icons/007-bearbeiten.svg';\r\nimport overview from '../assets/icons/005-liste.svg';\r\nimport './scss/navigation.scss';\r\n\r\n\r\nconst NavigationBottom = (props) => {\r\n    const [active1, setActive1] = useState('');\r\n    const [active2, setActive2] = useState('');\r\n    const [active3, setActive3] = useState('');\r\n\r\n    useEffect(() => {\r\n        switch (props.page) {\r\n            case 'VocabularyTraining':\r\n                setActive1('active');\r\n                break;\r\n            case 'AddVocabulary':\r\n                setActive2('active');\r\n                break;\r\n            case 'VocabularyList':\r\n                setActive3('active');\r\n                break;\r\n            default: setActive3('active');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar>\r\n                <Nav className=\"fixed-bottom\">\r\n                    <Container className={\"justify-content-center navcontainer\"}>\r\n                        <Row className={'navrow'}>\r\n                            <Col className={active1}>\r\n                                <LinkContainer className={'navItem'} to=\"/VocabularyTraining\">\r\n                                    <NavItem>\r\n                                        <img src={train} width=\"20\" height=\"20\" alt={'go to Training'} />\r\n                                        <p>Train</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                            <Col className={active2}>\r\n                                <LinkContainer className={'navItem'} to=\"/AddVocabulary\">\r\n                                    <NavItem>\r\n                                        <img src={plus} width=\"20\" height=\"20\" alt={'add Vocabulary'} />\r\n                                        <p>Add</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                            <Col className={active3}>\r\n                                <LinkContainer className={'navItem'} to=\"/VocabularyList\">\r\n                                    <NavItem>\r\n                                        <img src={overview} width=\"20\" height=\"20\" alt={'go to overview'} />\r\n                                        <p>Overview</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationBottom;\r\n","import \"../style.css\";\r\nimport React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport { Redirect } from \"react-router\";\r\nimport api from \"../api\";\r\nimport VocabRow from \"../components/VocabRow\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\n\r\nconst getProgressForUserAndLanguage = async (user_id, lang_id) => {\r\n  const data = {\r\n    user_id: user_id,\r\n    lang_id: lang_id,\r\n  };\r\n  const res = await api.progress.getProgressForUserAndLanguage(data);\r\n  return res;\r\n};\r\n\r\nconst VocabularyList = (props) => {\r\n  const [auth, ] = useGlobal(\"auth\");\r\n  const [user, ] = useGlobal(\"user\");\r\n  const [langID, ] = useGlobal(\"langID\");\r\n  const [langName, ] = useGlobal(\"langName\");\r\n\r\n  const [prog, setProg] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProgressForUserAndLanguage(user, langID).then((data) => {setProg(data)});\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const mapProgress = prog\r\n  .map((word) => {\r\n    return word;\r\n  });\r\n\r\n\r\n  var i = 0;\r\n\r\n  //TODO catch data as json from database\r\n  return (\r\n    <div id=\"content\" className=\"vocabulary_list\">\r\n      <NavigationTop />\r\n      <NavigationBottom page={'VocabularyList'}/>\r\n      <div id=\"vocabulary_list\">\r\n        <h1>Vocabulary overview</h1>\r\n        <div className=\"row vocabulary_list_entry\">\r\n          <div className=\"col-xl-1 col-lg-2 col-md-3 col-4 vocabulary_list_header\">English</div>\r\n          <div className=\"col-xl-2 col-lg-2 col-md-3 col-4 vocabulary_list_header\">{langName}</div>\r\n          <div className=\"col-xl-1 col-lg-2 col-md-3 col-4 vocabulary_list_header\">Progress</div>\r\n        </div>\r\n        {mapProgress.map((prog) => {\r\n          return <VocabRow key={i++} prog={prog} />\r\n        })}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyList;\r\n","import \"../style.css\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\n/* import axios from \"axios\";\r\n */import { Redirect } from \"react-router\";\r\nimport React, { useGlobal, useState, createRef } from \"reactn\";\r\nimport api from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\n\r\nconst AddVocabulary = () => {\r\n  let textinput = createRef();\r\n  const [auth, ] = useGlobal(\"auth\");\r\n  const [langID, ] = useGlobal(\"langID\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [info, setInfo] = useState(\"\");\r\n  const [user, ] = useGlobal(\"user\");\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const addVocab = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true)\r\n    const data = {\r\n      language_id: langID,\r\n      english_word: textinput.current.value,\r\n      user_id: user,\r\n    };\r\n\r\n    const res = await api.vocab.insert(data);\r\n    if(res.success === true) {\r\n      setInfo(res.info);\r\n      setColor(\"right\");\r\n    } else {\r\n      setInfo(res.error);\r\n      setColor(\"wrong\");\r\n    }\r\n    setLoading(false)\r\n  };\r\n\r\n\r\n  return (\r\n    <div id=\"content\" className=\"add_vocabulary\">\r\n      <NavigationTop />\r\n      <NavigationBottom page={'AddVocabulary'}/>\r\n      <form>\r\n        <h1>Add vocabulary</h1>\r\n        <h2>Enter the word you want to add</h2>\r\n        <div className=\"form-group row\">\r\n          <label className=\"col-lg-2 col-12 no_padding_left\" htmlFor=\"add_vocabulary_english\">\r\n            English\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control col-lg-10 col-12\"\r\n            id=\"add_vocabulary_english\"\r\n            placeholder=\"type in English word\"\r\n            ref={textinput}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\" onClick={addVocab} disabled={loading}>\r\n          \r\n          {loading ? (\r\n            <div className=\"spinner-border \" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          ) : (\r\n            \"Add vocabulary\"\r\n          )}\r\n        </button>\r\n        <Link to=\"/VocabularyList\">\r\n          <button type=\"button\" className=\"btn btn-primary margin_left grey_button\">\r\n            Show overview\r\n          </button>\r\n        </Link>\r\n      </form>\r\n      <div className={\"inline_block margin_top \" + color}>{info}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVocabulary;\r\n","import React, { useGlobal, useState } from \"reactn\";\r\n\r\nconst VocabularyTraining_Options = (props) => {\r\n  const [language, ] = useGlobal(\"language\");\r\n  const [vocabNumber, setVocabNumber] = useState(0);\r\n  const [progress1, setProgress1] = useState(true);\r\n  const [progress2, setProgress2] = useState(true);\r\n  const [progress3, setProgress3] = useState(true);\r\n  const [training_options_radios, setTraining_options_radios] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { receiveInput } = props;\r\n    receiveInput({ vocabNumber, progress1, progress2, progress3, training_options_radios });\r\n    props.onClick();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    switch (name) {\r\n      case \"vocabNumber\":\r\n        setVocabNumber(value);\r\n        break;\r\n      case \"progress1\":\r\n        setProgress1(!progress1);\r\n        break;\r\n\r\n      case \"progress2\":\r\n        setProgress2(!progress2);\r\n        break;\r\n\r\n      case \"progress3\":\r\n        setProgress3(!progress3);\r\n        break;\r\n      case \"training_options_radios\":\r\n        setTraining_options_radios(value);\r\n        break;\r\n\r\n      default:\r\n        console.error(\"Oh..\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const { showButton } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Please set your training prefrences</h2>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12 no_padding_left\" htmlFor=\"training_options_amount\">\r\n          How many vocabulary do you want to practise?\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control col-lg-8 col-xs-12\"\r\n          id=\"training_options_amount\"\r\n          defaultValue={25}\r\n          name=\"vocabNumber\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12 no_padding_left\" htmlFor=\"training_options_amount\">\r\n          Train vocabulary with following progress:\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress1}\r\n              id=\"training_options_check_1\"\r\n              name=\"progress1\"\r\n              checked={progress1}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_1\">\r\n              1\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress2}\r\n              id=\"training_options_check_2\"\r\n              name=\"progress2\"\r\n              checked={progress2}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_2\">\r\n              2\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress3}\r\n              id=\"training_options_check_2\"\r\n              name=\"progress3\"\r\n              checked={progress3}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_2\">\r\n              3\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12 no_padding_left\" htmlFor=\"training_options_direction\">\r\n          Direction\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"training_options_radios\"\r\n              id=\"training_options_radios_1\"\r\n              value=\"en_fo\"\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_radios_1\">\r\n              {`Show English, ask ${language}`}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"training_options_radios\"\r\n              id=\"training_options_radios_2\"\r\n              value=\"fo_en\"\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_radios_2\">\r\n              {`Show ${language}, ask English`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showButton ? (\r\n        <button type=\"submit\" className=\"btn btn-primary margin_top\">\r\n          Start training\r\n        </button>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Options;\r\n","import React, { useState, useEffect, useGlobal } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getProgress = async (query) => {\r\n  const res = await api.progress.filterProgress(query);\r\n  return res;\r\n};\r\n\r\nconst getVocabsById = async (id) => {\r\n  const res = await api.vocab.getVocabById(id);\r\n  return res;\r\n};\r\n\r\nconst VocabularyTraining_Queries = (props) => {\r\n  const [trainingVorab, setTrainingVorab] = useState([]);\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [iterate, setIterate] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n  const [summary, setSummary] = useGlobal(\"summary\");\r\n  const [user, ] = useGlobal(\"user\");\r\n  const [progress] = useGlobal(\"progress\");\r\n  const [message, setMessage] = useState(null);\r\n  const [help, setHelp] = useState(null);\r\n  const [falseInputCount, setFalseInputCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const query = { user_id: user, language_id: langID, progress: progress };\r\n\r\n    getProgress(query).then((data) => {\r\n      if (data.success) {\r\n        getTrainingVocab(data.data);\r\n\r\n        // reset Summary\r\n        setSummary([]);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSkip = () => {\r\n    setIterate(iterate + 1);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const currentWord = trainingVorab[iterate];\r\n    const localSummary = summary;\r\n    localSummary.push({ currentWord, input });\r\n    setSummary(localSummary);\r\n\r\n    const idObj = {\r\n      user_id: user,\r\n      vocab_id: currentWord[\"_id\"],\r\n      lang_id: langID,\r\n    };\r\n\r\n    //TODO: What do do if word is wrong? Decrease progress? Or just reset RGIAR\r\n\r\n    if (input) {\r\n      if (input.toLowerCase().trim() === currentWord.translation[langID].toLowerCase()) {\r\n        // Word correct\r\n        // TODO: graphic reaction\r\n        setIterate(iterate + 1);\r\n        setInput(\"\");\r\n        setHelp(\"\")\r\n\r\n        // progressObj contains the ProgressObj before the update!\r\n        const progressObj = await api.progress.increaseRGIAR(idObj);\r\n\r\n        if (progressObj.progress === 1) {\r\n          if (progressObj.right_guesses_in_a_row === 2) {\r\n            api.progress.increaseProgress(idObj);\r\n            console.info(\"%c Progress updated!\", \"Background: #00ff55\");\r\n          }\r\n        } else if (progressObj.progress === 2) {\r\n          if (\r\n            progressObj.right_guesses_in_a_row === 2 ||\r\n            progressObj.right_guesses_in_a_row === 5\r\n          ) {\r\n            api.progress.increaseProgress(idObj);\r\n            console.info(\"%c Progress updated!\", \"Background: #33ff77\");\r\n          }\r\n        } else {\r\n          console.info(\"%c Maximum Progress level already achieved!\", \"Background: #0f0\");\r\n        }\r\n      } else {\r\n        api.progress.resetRGIAR(idObj);\r\n\r\n        const newInputCount = falseInputCount + 1;\r\n        setFalseInputCount(newInputCount);\r\n        if (falseInputCount >= 1) {\r\n          const translationByDirection =\r\n            props.direction === \"fo_en\"\r\n              ? currentWord.translation[langID]\r\n              : currentWord.english_word;\r\n          setHelp(translationByDirection);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInput(inputValue);\r\n  };\r\n\r\n  const getTrainingVocab = async (sortedVocab) => {\r\n    const numberOfVocab = props.numberOfVocabs;\r\n\r\n    // VocabIds Aus DB:Progresses\r\n    const ids = [];\r\n    sortedVocab.forEach((vocab) => {\r\n      ids.push(vocab.vocab_id);\r\n    });\r\n\r\n    // Vocabs from DB:Vocabs\r\n    const vocabFromDb = await getVocabsById(ids).then((data) => {\r\n      return data.data;\r\n    });\r\n\r\n    const vocabChoice = [];\r\n    if (vocabFromDb.length < numberOfVocab) {\r\n      setMessage(`Your selection contains only ${vocabFromDb.length} words.`);\r\n      resetMessageIn5s();\r\n    }\r\n\r\n    while (vocabChoice.length < vocabFromDb.length && vocabChoice.length < numberOfVocab) {\r\n      const number = Math.floor(Math.random() * vocabFromDb.length + 0);\r\n      if (!vocabChoice.includes(vocabFromDb[number])) {\r\n        vocabChoice.push(vocabFromDb[number]);\r\n      }\r\n    }\r\n    setTrainingVorab(vocabChoice);\r\n  };\r\n\r\n  const renderTrainingVocab = () => {\r\n    if (trainingVorab[iterate]) {\r\n      if (props.direction === \"fo_en\") {\r\n        // default\r\n        return trainingVorab[iterate][\"english_word\"];\r\n      }\r\n      return trainingVorab[iterate].translation[langID];\r\n    }\r\n    return \"error\";\r\n  };\r\n\r\n  const resetMessageIn5s = () => {\r\n    setTimeout(() => { setMessage(null); }, 5000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"margin_top\">\r\n      {iterate < trainingVorab.length ? (\r\n        <form>\r\n          {message ? <p className=\"bg-warning p-1\">{message}</p> : null}\r\n          <h2>{`Translate! ${iterate + 1}/${trainingVorab.length}`}</h2>\r\n          <div className=\"form-group row\">\r\n            <label\r\n              className=\"col-lg-3 col-xs-12 no_padding_left\"\r\n              htmlFor=\"train_vocabulary_translation\"\r\n            >\r\n              {renderTrainingVocab()}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-lg-9 col-xs-12\"\r\n              id=\"train_vocabulary_translation\"\r\n              placeholder=\"type in translation\"\r\n              name=\"translationInput\"\r\n              onChange={handleInput}\r\n              value={input}\r\n            />\r\n          </div>\r\n          {help ? <p className=\"alert-success\">Translation: {help}</p> : null}\r\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>\r\n            Submit and continue\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary ml-1\" onClick={handleSkip}>\r\n            Skip\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div>Completed! Show summary?</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Queries;\r\n","import React, {useEffect, useState} from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getProgress = async (vocabID) => {\r\n    const data = await api.progress.getProgressByVocabId(vocabID)\r\n    try {\r\n        return data.progress \r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n    return -1;\r\n}\r\n\r\nconst SummaryRow = (props) => {\r\n  const { vocab, input, correct, vocabID } = props;\r\n  const [progress, setProgress] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getProgress(vocabID).then((data) => {\r\n            setProgress(data)\r\n        })\r\n    // eslint-disable-next-line\r\n    }, [])\r\n    \r\n  return (\r\n    <div className={`row vocabulary_list_entry ${correct.toLowerCase() === input.toLowerCase() ? \"right\" : \"wrong\"}`}>\r\n      <div className=\"col-3\">{vocab}</div>\r\n      <div className=\"col-3\">{input}</div>\r\n      <div className=\"col-3\">{correct}</div>\r\n      <div className=\"col-3\">{progress}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryRow;\r\n","import React, { useGlobal } from \"reactn\";\r\nimport SummaryRow from \"../components/SummaryRow\";\r\n\r\nconst VocabularyTraining_Summary = (props) => {\r\n  const [summary, ] = useGlobal(\"summary\");\r\n  const [langID, ] = useGlobal(\"langID\");\r\n  var i = 0;\r\n\r\n  return (\r\n    <div id=\"training_summary\" className=\"margin_top\">\r\n      <h2>Training summary</h2>\r\n      <div className=\"row vocabulary_list_entry\">\r\n        <div className=\"col-3 vocabulary_list_header\">Given word</div>\r\n        <div className=\"col-3 vocabulary_list_header\">Your translation</div>\r\n        <div className=\"col-3 vocabulary_list_header\">Correct translation</div>\r\n        <div className=\"col-3 vocabulary_list_header\">Current Progress</div>\r\n      </div>\r\n      {summary.map((entry) => {\r\n        \r\n        return (\r\n          <SummaryRow\r\n            key={i++}\r\n            vocab={entry.currentWord.english_word}\r\n            input={entry.input}\r\n            correct={entry.currentWord.translation[langID]}\r\n            vocabID={entry.currentWord[\"_id\"]}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Summary;\r\n","import \"../style.css\";\r\nimport React, { useGlobal, useState } from \"reactn\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport Options from \"../components/VocabularyTraining_Options\";\r\nimport Queries from \"../components/VocabularyTraining_Queries\";\r\nimport Summary from \"../components/VocabularyTraining_Summary\";\r\nimport { Redirect } from \"react-router\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\n\r\nfunction VocabularyTraining() {\r\n  const [auth, ] = useGlobal(\"auth\");\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const [showQueries, setShowQueries] = useState(false);\r\n  const [showSummary, setShowSummary] = useState(false);\r\n  const [buttonState, setButtonState] = useState(\"options\");\r\n  const [buttonText, setButtonText] = useState(\"Start training\");\r\n  const [savedSettings, setSavedSettings] = useState(false);\r\n  const [numberOfVocab, setNumberOfVocab] = useGlobal(\"numberOfVocab\");\r\n  const [progress, setProgress] = useGlobal(\"progress\");\r\n  const [direction, setDirection] = useGlobal(\"direction\");\r\n  const [language, ] = useGlobal(\"language\");\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const changeView = () => {\r\n    if (buttonState === \"options\") {\r\n      setButtonState(\"queries\");\r\n      setShowOptions(false);\r\n      setShowQueries(true);\r\n      setShowSummary(false);\r\n      setButtonText(\"Stop training\");\r\n    } else if (buttonState === \"queries\") {\r\n      setButtonState(\"summary\");\r\n      setShowOptions(false);\r\n      setShowQueries(false);\r\n      setShowSummary(true);\r\n      setButtonText(\"Start new training\");\r\n    } else if (buttonState === \"summary\") {\r\n      setButtonState(\"options\");\r\n      setShowOptions(true);\r\n      setShowQueries(false);\r\n      setShowSummary(false);\r\n      setButtonText(\"Start training\");\r\n      setSavedSettings(false);\r\n    }\r\n  };\r\n\r\n  const receiveInput = (input) => {\r\n    setSavedSettings(true);\r\n    if (input.vocabNumber === 0){\r\n      setNumberOfVocab(25);\r\n    } else {\r\n      setNumberOfVocab(input.vocabNumber);\r\n    }\r\n    const progressArray = [];\r\n    if (input.progress1) {\r\n      progressArray.push(1);\r\n    }\r\n    if (input.progress2) {\r\n      progressArray.push(2);\r\n    }\r\n    if (input.progress3) {\r\n      progressArray.push(3);\r\n    }\r\n    setProgress(progressArray);\r\n    if (input.training_options_radios) {\r\n      setDirection(input.training_options_radios);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"content\" className=\"vocabulary_training\">\r\n      <NavigationTop />\r\n      <NavigationBottom page={'VocabularyTraining'}/>\r\n      <h1>Vocabulary Training</h1>\r\n      {showOptions && !savedSettings ? (\r\n        <Options receiveInput={receiveInput} showButton={!savedSettings} onClick={changeView} />\r\n      ) : null}\r\n      {showQueries ? (\r\n        <Queries\r\n          show={false}\r\n          numberOfVocabs={numberOfVocab}\r\n          progress={progress}\r\n          direction={direction}\r\n          language={language}\r\n        />\r\n      ) : null}\r\n      {showSummary ? <Summary show={false} /> : null}\r\n      {savedSettings ? (\r\n        <button type=\"button\" className=\"btn btn-primary margin_top\" onClick={changeView}>\r\n          {`${buttonText}`}\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VocabularyTraining;\r\n","import \"../style.css\";\r\nimport React, {useGlobal} from \"reactn\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport {Redirect} from \"react-router\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport api from \"../api\";\r\nimport {createRef, useState} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\nfunction Settings() {\r\n    const [auth, ] = useGlobal(\"auth\");\r\n    const [user, ] = useGlobal(\"user\");\r\n    let newName = createRef();\r\n    let newProgress = createRef();\r\n    const [show, setShow] = useState(false);\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    if (!auth) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        event.preventDefault();\r\n        setShow(false);\r\n    }\r\n    const handleShow = (event) => {\r\n        event.preventDefault();\r\n        setShow(true);\r\n    }\r\n\r\n\r\n    const changeInformation = async (event) => {\r\n        event.preventDefault();\r\n        let toSend = {\r\n            right_guesses_in_a_row: newProgress.current.value,\r\n            username: newName.current.value\r\n        }\r\n        const res = await api.user.editUser(user, toSend);\r\n        if (res.data.success) {\r\n            setChanged(true);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"content\" className=\"settings\">\r\n            <NavigationTop/>\r\n            <NavigationBottom/>\r\n            <form>\r\n                <h1>Settings</h1>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-lg-10 col-xs-12 no_padding_left\" htmlFor=\"settings\">How many correct answers\r\n                        in a row lead to a new progress level?</label>\r\n                    <input type=\"number\" className=\"form-control col-lg-2 col-xs-12\" id=\"settings\" placeholder=\"\"\r\n                           ref={newProgress}/>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-lg-10 col-xs-12 no_padding_left\" htmlFor=\"settings\">Change Username</label>\r\n                    <input type=\"text\" className=\"form-control col-lg-2 col-xs-12\" id=\"settings\" placeholder=\"\"\r\n                           ref={newName}/>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={handleShow}>Save settings</button>\r\n            </form>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Warning</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{changed ? 'changed.' : 'Are you sure,that you want to make these changes ?'}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    {!changed && <Button variant=\"primary\" onClick={changeInformation}>\r\n                        Save Changes\r\n                    </Button>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Landing from \"./pages/Landing\"\r\nimport Languages from './pages/Languages'\r\nimport VocabularyList from './pages/VocabularyList'\r\nimport AddVocabulary from './pages/AddVocabulary'\r\nimport VocabularyTraining from './pages/VocabularyTraining'\r\nimport Settings from './pages/Settings'\r\n\r\n\r\n\r\nconst Routes = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route path='/Languages' component={Languages} />\r\n            <Route path='/VocabularyList' component={VocabularyList} />\r\n            <Route path='/AddVocabulary' component={AddVocabulary} />\r\n            <Route path='/VocabularyTraining' component={VocabularyTraining} />\r\n            <Route path='/Settings' component={Settings} />\r\n\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Routes\r\n","import React from \"react\";\r\nimport Router from \"./Router\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport './customs.scss'\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n        <Container>\r\n            <Router/>\r\n        </Container>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React, { setGlobal } from \"reactn\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\n\r\n// FIXME: FOR DEV REASONS SET ON TRUE, BUT SET FALSE FOR PRODUCTIVE!\r\n// FIXME: REMOVE USERID AND LANGNAME AND LANGID BEFORE RELEASE!\r\nsetGlobal({\r\n  auth: false,\r\n  user: null,\r\n  progress: [1],\r\n  numberOfVocab: 25,\r\n  direction: \"fo_en\",\r\n  langName: null,\r\n  langID: null,\r\n  summary: []\r\n});\r\n\r\nrender(\r\n        <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/003-plus.fbcff910.svg\";","module.exports = __webpack_public_path__ + \"static/media/007-bearbeiten.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-liste.ad43a8d6.svg\";"],"sourceRoot":""}