{"version":3,"sources":["lib/error.svg","components/NavigationBottom.js","components/NavigationTop.js","api.js","helper.js","components/Windowsize.js","pages/AddVocabulary.js","pages/ErrorPage.js","components/LogInForms.js","components/LogInFormsHandler.js","pages/Landing.js","components/LanguageButton.js","components/ReducedNavigation.js","pages/Languages.js","pages/Settings.js","components/Pagination.js","components/VocabRow.js","pages/VocabularyList.js","components/VocabularyTraining_Options.js","components/VocabularyTraining_Queries.js","components/SummaryRow.js","components/VocabularyTraining_Summary.js","pages/VocabularyTraining.js","Router.js","App.js","index.js","assets/icons/003-plus.svg","assets/icons/007-bearbeiten.svg","assets/icons/005-liste.svg"],"names":["module","exports","NavigationBottom","props","useState","active1","setActive1","active2","setActive2","active3","setActive3","useEffect","page","Navbar","Nav","className","Container","Row","style","backgroundColor","Col","to","NavItem","src","train","width","height","alt","plus","overview","NavigationTop","useGlobal","setAuth","handleClick","localStorage","setItem","expand","id","sticky","getItem","Toggle","aria-controls","Collapse","NavDropdown","title","Item","type","onClick","url","getStatus","a","axios","get","createUser","data","post","console","error","fetchUsers","getIdForUserName","res","editUser","userId","patch","deleteUser","delete","getVocabs","insertVocab","getVocabAndTranslation","getVocabsById","getLanguages","getProgress","searchProgress","filterProgress","query","params","increaseRGIAR","resetRGIAR","increaseProgress","getProgressForUserAndLanguage","createProgress","insert","getVocab","getVocabById","serverIsRunning","api","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","AddVocabulary","langID","serverError","setserverError","user","color","setColor","info","setInfo","loading","setLoading","textinput","createRef","then","isRunning","addVocab","event","preventDefault","language_id","english_word","current","value","user_id","status","resProg","success","didAlreadyExist","log","htmlFor","placeholder","ref","disabled","role","ErrorPage","serverErrorLocal","setserverErrorLocal","setInterval","require","LogInForms","noAccount","login","userNameHelp","passwordHelp","passwordRepeatHelp","userName","setUserName","password","setPassword","passwordRepeat","setPasswordRepeat","loginInfo","handleChange","target","name","handleSubmit","onSubmit","defaultValue","onChange","LogInFormsHandler","emptyHelpFields","setNoAccount","buttonText","setButtonText","Landing","setProgressSetting","setUser","auth","setPasswordHelp","setPasswordRepeatHelp","setUserNameHelp","input","usernameAlreadyTaken","taken","validateCreateUser","signUpDataComplete","checkIfUserNameAvailable","userInfo","username","PromiseB","resolve","reject","setLocalStorage","allUsers","existingUser","getUser","undefined","logInDataComplete","length","i","passwordCorrect","authenticateUser","_id","right_guesses_in_a_row","userData","Map","forEach","set","isAuthorized","version","LanguageButton","language","getLanguage","setLangID","setLangName","ReducedNavigation","Languages","langName","languages","setLanguages","redirect","setRedirect","group","groupEnd","pathname","map","key","Settings","newName","newProgress","newpassword","newpassword2","show","setShow","show2","setShow2","changed","setChanged","passw","setpassw","setUserInfo","handleClose","handleShow","passwordsOkay","cleanResponse","obj","propName","changeInformation","toSend","deleteAccount","e","Button","variant","marginTop","Modal","onHide","Header","closeButton","Title","Body","Footer","Pagination","vocabsPerPage","totalVocabs","paginate","pageNumbers","currentPage","setCurrentPage","Math","ceil","push","checkIfCurrentPage","number","getTranslation","lang_id","translation","VocabRow","progress","even","setTranslation","createBasicVocab","basics","vocabulary","Object","entries","word","VocabularyList","prog","setProg","isCancelled","indexOfLastVocab","indexOfFirstVocab","currentVocabs","slice","progressObject","Date","getTime","pageNumber","VocabularyTraining_Options","vocabNumber","setVocabNumber","progress1","setProgress1","progress2","setProgress2","progress3","setProgress3","training_options_radios","setTraining_options_radios","showButton","receiveInput","checked","defaultChecked","VocabularyTraining_Queries","trainingVorab","setTrainingVorab","summary","setSummary","progressSetting","direction","falseInputCount","setFalseInputCount","help","setHelp","setInput","iterate","setIterate","message","setMessage","getTrainingVocab","currentWord","localSummary","idObj","wellJustFakeIt","correct","toLowerCase","trim","progressObj","translationByDirection","sortedVocab","numberOfVocab","numberOfVocabs","en_words","vocab","vocabFromDb","vocabChoice","resetMessageIn5s","floor","random","includes","setTimeout","inputValue","SummaryRow","setProgress","VocabularyTraining_Summary","entry","correctTranslation","test","VocabularyTraining","setDirection","setNumberOfVocab","buttonState","setButtonState","savedSettings","setSavedSettings","showOptions","setShowOptions","showQueries","setShowQueries","showSummary","setShowSummary","changeView","progressArray","Routes","exact","path","component","Error","App","Router","setGlobal","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad1d1513.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.fec60437.svg\";","import React, { useEffect, useState } from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport plus from '../assets/icons/003-plus.svg';\r\nimport train from '../assets/icons/007-bearbeiten.svg';\r\nimport overview from '../assets/icons/005-liste.svg';\r\nimport './scss/navigation.scss';\r\n\r\n\r\nconst NavigationBottom = (props) => {\r\n    const [active1, setActive1] = useState('');\r\n    const [active2, setActive2] = useState('');\r\n    const [active3, setActive3] = useState('');\r\n\r\n    useEffect(() => {\r\n        switch (props.page) {\r\n            case 'VocabularyTraining':\r\n                setActive1('active');\r\n                break;\r\n            case 'AddVocabulary':\r\n                setActive2('active');\r\n                break;\r\n            case 'VocabularyList':\r\n                setActive3('active');\r\n                break;\r\n            default: setActive3('active');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <style>\r\n                {`\r\n                .navItem{\r\n                }\r\n                `}\r\n            </style>\r\n            <Navbar>\r\n                <Nav className=\"fixed-bottom\">\r\n                    <Container className={\"justify-content-center navcontainer\"}>\r\n                        <Row className={'navrow'} style={{backgroundColor: \"white\"}}>\r\n                            <Col className={active1}>\r\n                                <LinkContainer className={'navItem'} to=\"/VocabularyTraining\">\r\n                                    <NavItem>\r\n                                        <img className=\"svg\" src={train} width=\"20\" height=\"20\" alt={'go to Training'} />\r\n                                        <p>Train</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                            <Col className={active2}>\r\n                                <LinkContainer className={'navItem'} to=\"/AddVocabulary\">\r\n                                    <NavItem>\r\n                                        <img src={plus} width=\"20\" height=\"20\" alt={'add Vocabulary'} />\r\n                                        <p>Add</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                            <Col className={active3}>\r\n                                <LinkContainer className={'navItem'} to=\"/VocabularyList\">\r\n                                    <NavItem>\r\n                                        <img src={overview} width=\"20\" height=\"20\" alt={'go to overview'} />\r\n                                        <p>Overview</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationBottom;\r\n","import React, {useGlobal} from \"reactn\";\r\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n//import useWindowDimensions from \"./Windowsize\";\r\n\r\nconst NavigationTop = (props) => {\r\n    const [, setAuth] = useGlobal(\"auth\");\r\n\r\n    function handleClick() {\r\n        localStorage.setItem(\"isAuthorized\", false)\r\n        localStorage.setItem(\"userId\", \"\")\r\n        setAuth(false);\r\n    }\r\n\r\n    return (\r\n        <Navbar expand=\"lg\" id=\"navbar\" className=\"white-background\" sticky=\"top\">\r\n            {localStorage.getItem(\"isAuthorized\") === \"false\" ? <Redirect to=\"/\"/>:null}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={'ml-auto'}/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n\r\n                    {props.width > 700 &&\r\n                    <>\r\n                        <LinkContainer to=\"/VocabularyList\" className=\"menu_option vocabulary_list\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Overview\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/AddVocabulary\" className=\"menu_option add_vocabulary\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Add Vocabulary\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/VocabularyTraining\" className=\"menu_option vocabulary_training\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Training\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                    </>\r\n\r\n                    }\r\n\r\n\r\n                    {props.width > 700 ?\r\n                        <NavDropdown className={\"mr-sm-2 menu_option\"} id={\"basic-nav-dropdown\"} title={\"Settings\"}>\r\n                            <NavDropdown.Item className=\"menu_option\">\r\n                                <LinkContainer to=\"/Languages\" className=\"menu_option mr-sm-2\">\r\n                                    <NavItem className=\"menu_padding\">\r\n                                        Change language\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item className=\"menu_option\">\r\n                                <LinkContainer to=\"/Settings\" className=\"menu_option settings\">\r\n                                    <NavItem className=\"menu_padding\">\r\n                                        Account settings\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item className=\"menu_option\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                                    Logout\r\n                                </button>\r\n                            </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        :\r\n                        <>\r\n                            <LinkContainer to=\"/Languages\" className=\"menu_option mr-sm-2\">\r\n                                <NavItem className=\"menu_padding\">\r\n                                    Change language\r\n                                </NavItem>\r\n                            </LinkContainer>{\" \"}\r\n                            <LinkContainer to=\"/Settings\" className=\"menu_option settings\">\r\n                                <NavItem className=\"menu_padding\">\r\n                                    Account settings\r\n                                </NavItem>\r\n                            </LinkContainer>\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                                Logout\r\n                            </button>\r\n                        </>\r\n                    }\r\n\r\n\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nexport default NavigationTop;\r\n","import axios from \"axios\";\r\n\r\n// constants\r\nconst url = \"http://localhost:8080\";\r\n\r\n\r\n// User -------------------------------------------------------------\r\n  const getStatus = async () => {\r\n    return axios.get(`${url}/Users/status`)\r\n  }\r\n\r\nconst createUser = async (data) => {\r\n  try {\r\n    return axios.post(`${url}/Users`, data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst fetchUsers = async () => {\r\n  try {\r\n    return await axios.get(`${url}/Users`);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getIdForUserName = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Users/getIdForUserName`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst editUser = async (userId,data) => {\r\n  try {\r\n    return await axios.patch(`${url}/Users/${userId}`,{data})\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst deleteUser = async (userId) =>{\r\n  try {\r\n    return await axios.delete(`${url}/Users/${userId}`)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\n\r\n// Vocab ------------------------------------------------------------\r\n\r\nconst getVocabs = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst insertVocab = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/insert`, data);\r\n    return res;\r\n  } catch (error) {\r\n    return error\r\n  }\r\n};\r\n\r\nconst getVocabAndTranslation = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getVocabAndTranslation`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst getVocabsById = async (id) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getByIdArray`, id);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Language ---------------------------------------------------------\r\n\r\nconst getLanguages = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Languages`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Progress ---------------------------------------------------------\r\n\r\nconst getProgress = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/getProgress`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst searchProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/searchProgress`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst filterProgress = async (query) => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/filterProgress`,  {params: query});\r\n    return res.data\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst increaseRGIAR = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/increaseRGIAR`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst resetRGIAR = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/resetRGIAR`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst increaseProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/increaseProgress`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getProgressForUserAndLanguage = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getProgressForUserAndLanguage`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst createProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/createProgress`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  language: {\r\n    getLanguages: () => getLanguages(),\r\n  },\r\n  user: {\r\n    createUser: (data) => createUser(data),\r\n    fetchUsers: () => fetchUsers(),\r\n    editUser: (id,data) => editUser(id,data),\r\n    getIdForUserName: (data) => getIdForUserName(data),\r\n    deleteUser: (data)=> deleteUser(data)\r\n  },\r\n  vocab: {\r\n    insert: (data) => insertVocab(data),\r\n    getVocab: () => getVocabs(),\r\n    getVocabAndTranslation: (data) => getVocabAndTranslation(data),\r\n    getVocabById: (id) => getVocabsById(id)\r\n  },\r\n  progress: {\r\n    getProgress: () => getProgress(),\r\n    searchProgress: (data) => searchProgress(data),\r\n    filterProgress: (id) => filterProgress(id),\r\n    getProgressForUserAndLanguage: (data) => getProgressForUserAndLanguage(data),\r\n    increaseRGIAR: (data) => increaseRGIAR(data),\r\n    resetRGIAR: (data) => resetRGIAR(data),\r\n    increaseProgress: (data) => increaseProgress(data),\r\n    createProgress: (data)=> createProgress(data)\r\n  }, \r\n  status: {\r\n    get: () => getStatus(),\r\n  }\r\n};\r\n","import api  from \"./api\"\r\n\r\nconst serverIsRunning = async () => {\r\n    try {\r\n        await api.status.get()\r\n        return true\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default serverIsRunning","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React, { useGlobal, useState, createRef, useEffect } from \"reactn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\";\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nconst AddVocabulary = () => {\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [serverError, setserverError] = useGlobal(\"serverError\");\r\n  const [user] = useGlobal(\"user\");\r\n\r\n  const [color, setColor] = useState(\"\");\r\n  const [info, setInfo] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let textinput = createRef();\r\n  let { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const addVocab = async (event) => {\r\n    event.preventDefault();\r\n    setInfo(\"\");\r\n    setColor(\"no-color\");\r\n    setLoading(true);\r\n    const data = {\r\n      language_id: langID,\r\n      english_word: textinput.current.value,\r\n      user_id: user,\r\n    };\r\n    const res = await api.vocab.insert(data);\r\n\r\n    if (res.status === 200) {\r\n      const resProg = await api.progress.createProgress(data);\r\n      if (resProg.success) {\r\n        if (resProg.didAlreadyExist) {\r\n          setInfo(\"This word is already in your collection.\");\r\n          setColor(\"info\");\r\n        } else {\r\n          setInfo(\"Your word was successfully added.\");\r\n          setColor(\"right\");\r\n        }\r\n      } else {\r\n        setInfo(\"An error occured. Please try again later.\");\r\n        setColor(\"wrong\");\r\n      }\r\n    } else {\r\n      console.log(\"addVocab -> res\", res);\r\n      setInfo(\"Word not found. Please check the spelling.\");\r\n      setColor(\"wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"content\" className=\"add_vocabulary\">\r\n      {localStorage.getItem(\"isAuthorized\") === \"false\" ||\r\n      localStorage.getItem(\"isAuthorized\") === false ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null}\r\n      <NavigationTop width={width} />\r\n      {width < 700 && <NavigationBottom page={\"AddVocabulary\"} />}\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : (\r\n        <form>\r\n          <h1 className=\"margin_top_small\">Add vocabulary</h1>\r\n          <h2>Enter the word you want to add</h2>\r\n          <div className=\"form-group row\">\r\n            <label\r\n              className=\"col-lg-2 col-md-3 col-sm-3 col-12 no-padding-left\"\r\n              htmlFor=\"add_vocabulary_english\"\r\n            >\r\n              English\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-lg-10 col-md-9 col-sm-9 col-12\"\r\n              id=\"add_vocabulary_english\"\r\n              placeholder=\"type in English word\"\r\n              ref={textinput}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary margin_top_small\"\r\n            onClick={addVocab}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <div className=\"spinner-border \" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            ) : (\r\n              \"Add vocabulary\"\r\n            )}\r\n          </button>\r\n          <Link to=\"/VocabularyList\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary margin_left grey_button margin_top_small\"\r\n            >\r\n              Show overview\r\n            </button>\r\n          </Link>\r\n        </form>\r\n      )}\r\n      <div className={\"p-1 inline_block margin_top \" + color}>{info}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVocabulary;\r\n","import React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport \"../style.scss\";\r\nimport serverIsRunning from \"../helper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorPage = () => {\r\n  const [, setserverError] = useGlobal(\"serverError\");\r\n  const [serverErrorLocal, setserverErrorLocal] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setLoading(true);\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n        setserverErrorLocal(false);\r\n        setLoading(false);\r\n      } else {\r\n        setserverError(true);\r\n        setserverErrorLocal(true);\r\n        setInterval(() => {\r\n          setLoading(false);\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"margin_top_small\">Oh no!</h1>\r\n      <div className=\"d-flex p-2 flex-column\">\r\n        <img style={{ height: \"350px\" }} src={require(\"../lib/error.svg\")} className=\"m-4\" alt=\"error-icon\" />\r\n        {serverErrorLocal ? (\r\n          <div className=\"alert alert-danger m-4\">Network Error! Please try again later!</div>\r\n        ) : null}\r\n        <div className=\"alert alert-warning m-4 d-flex justify-content-between align-items-center\">\r\n          {`Check Server Status: ${serverErrorLocal ? \"Still down 😔\" : \"Up Again! 😃\"}`}\r\n          {loading ? (\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          ) : null}\r\n          <button type=\"button\" className=\"btn-warning btn btn-primary\" onClick={handleClick}>\r\n            Check\r\n          </button>\r\n        </div>\r\n        {serverErrorLocal ? null : (\r\n          <Link to=\"/\" className=\"m-4\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-success btn btn-primary w-100\"\r\n              onClick={handleClick}\r\n            >\r\n              Back to login!\r\n            </button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React, { useState } from \"reactn\";\r\n\r\n\r\nconst LogInForms = (props) => {\r\n  const { noAccount, createUser, login, userNameHelp, passwordHelp, passwordRepeatHelp } = props;\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\r\n\r\n  const loginInfo = { userName, password, passwordRepeat, userNameHelp, passwordHelp, passwordRepeatHelp };\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n\r\n    const value = event.target.value;\r\n\r\n    switch (event.target.name) {\r\n      case \"userName\":\r\n        setUserName(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      case \"passwordRepeat\":\r\n        setPasswordRepeat(value);\r\n        break;\r\n      default: break;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    switch (event.target.name) {\r\n      case \"noAccount\":\r\n        createUser(loginInfo);\r\n        break;\r\n\r\n      default:\r\n        login(loginInfo);\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (noAccount) {\r\n    return (\r\n      <fieldset className=\"box\">\r\n        <form onSubmit={handleSubmit} name=\"noAccount\" id=\"signUpForm\">\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-username\">\r\n              User name\r\n            </label>\r\n            <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n              <input\r\n                name=\"userName\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"login-username\"\r\n                placeholder=\"Choose a user name\"\r\n                defaultValue={userName}\r\n                onChange={handleChange}\r\n              />\r\n              <small className=\"form-text text-muted\">{userNameHelp}</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n              Password\r\n            </label>\r\n            <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"login-password\"\r\n                placeholder=\"Choose a password\"\r\n                onChange={handleChange}\r\n              />\r\n              <small className=\"form-text text-muted\">{passwordHelp}</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n              Repeat password\r\n            </label>\r\n            <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n              <input\r\n                name=\"passwordRepeat\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"login-password\"\r\n                placeholder=\"Repeat password\"\r\n                onChange={handleChange}\r\n              />\r\n              <small className=\"form-text text-muted\">{passwordRepeatHelp}</small>\r\n            </div>\r\n          </div>\r\n          <input type=\"submit\" value=\"Sign Up\" className=\"btn btn-primary\" />\r\n        </form>\r\n      </fieldset>\r\n    );\r\n  } else {\r\n    return (\r\n      <fieldset className=\"box\">\r\n        <form onSubmit={handleSubmit} name=\"hasAccount\" id=\"logInForm\">\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-username\">\r\n              User name\r\n            </label>\r\n            <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n              <input\r\n                type=\"username\"\r\n                className=\"form-control\"\r\n                id=\"login-username\"\r\n                placeholder=\"Enter user name\"\r\n                name=\"userName\"\r\n                onChange={handleChange}\r\n              />\r\n              <small className=\"form-text text-muted\">{userNameHelp}</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n              Password\r\n            </label>\r\n            <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"login-password\"\r\n                placeholder=\"Enter password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n              <small className=\"form-text text-muted\">{passwordHelp}</small>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Log in\r\n          </button>\r\n        </form>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default LogInForms;","import React, { useState } from \"reactn\";\r\nimport LogInForms from \"./LogInForms\";\r\n\r\n\r\nconst LogInFormsHandler = (props) => {\r\n    const { createUser, login, userNameHelp, passwordHelp, passwordRepeatHelp, emptyHelpFields } = props;\r\n\r\n    const [noAccount, setNoAccount] = useState(false);\r\n    const [buttonText, setButtonText] = useState(\"No account?\");\r\n\r\n\r\n    const handleClick = () => {\r\n        //const { emptyHelpFields } = this.props;\r\n        emptyHelpFields();\r\n        if (noAccount === false) {\r\n            setNoAccount(true);\r\n            setButtonText(\"Already got an account?\");\r\n        } else {\r\n            setNoAccount(false);\r\n            setButtonText(\"No account?\");\r\n            emptyHelpFields();\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LogInForms noAccount={noAccount} createUser={createUser} login={login} userNameHelp={userNameHelp} passwordHelp={passwordHelp} passwordRepeatHelp={passwordRepeatHelp}/>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary marginleft margin_top grey_button\"\r\n                onClick={handleClick}\r\n            >\r\n                {buttonText}\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default LogInFormsHandler;\r\n\r\n","import PromiseB from \"bluebird\";\r\nimport React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"../style.scss\";\r\nimport LogInFormsHandler from \"../components/LogInFormsHandler\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\"\r\nimport {version} from \"../lib/version.json\"\r\n\r\nfunction Landing() {\r\n    const [, setProgressSetting] = useGlobal(\"progressSetting\");\r\n    const [user, setUser] = useGlobal(\"user\");\r\n    const [auth, setAuth] = useGlobal(\"auth\");\r\n    const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n    const [passwordHelp, setPasswordHelp] = useState(\"\");\r\n    const [passwordRepeatHelp, setPasswordRepeatHelp] = useState(\"\");\r\n    const [userNameHelp, setUserNameHelp] = useState(\"\");\r\n\r\n    async function createUser(input) {\r\n        const userName = input.userName ? input.userName : null;\r\n        const password = input.password ? input.password : null;\r\n        const passwordRepeat = input.passwordRepeat ? input.passwordRepeat : null;\r\n        emptyHelpFields();\r\n        usernameAlreadyTaken(userName).then((taken) => validateCreateUser(userName, taken, password, passwordRepeat));\r\n    }\r\n\r\n    useEffect(() => {\r\n      serverIsRunning().then((isRunning) => {\r\n        if (isRunning) {\r\n          setserverError(false);\r\n        } else {\r\n          setserverError(true);\r\n        }\r\n      });\r\n      // eslint-disable-next-line\r\n    }, []);    \r\n\r\n    async function validateCreateUser(userName, usernameAlreadyTaken, password, passwordRepeat) {\r\n        try {\r\n            if (signUpDataComplete(userName, password, passwordRepeat)) {\r\n                if (usernameAlreadyTaken === true) {\r\n                    setUserNameHelp(\"Username is already taken. Please choose a different one.\");\r\n                }\r\n                if (password !== passwordRepeat) {\r\n                    setPasswordHelp(\"Passwords don't match\");\r\n                    setPasswordRepeatHelp(\"Passwords don't match\");\r\n                } else {\r\n                    const isAvailable = await checkIfUserNameAvailable(userName);\r\n                    if (isAvailable) {\r\n                        console.info(\"Saving...\", { userName, password, passwordRepeat });\r\n    \r\n                        const userInfo = {\r\n                            username: userName,\r\n                            password: password,\r\n                        };\r\n    \r\n                        return new PromiseB(async (resolve, reject) => {\r\n                            const res = await api.user.createUser(userInfo);\r\n                            if (res) {\r\n                                if (res.status === 200) {\r\n                                    setAuth(true);\r\n                                    const userId = await getIdForUserName(userName);\r\n                                    setLocalStorage(true, userId)\r\n                                    setUser(userId);\r\n                                    return resolve(res.data);\r\n                                }\r\n                            }\r\n                            localStorage.setItem(\"isAuthorized\", false)\r\n                            localStorage.setItem(\"userId\", \"\")                    \r\n                            setAuth(false);\r\n                            return reject(\"Something went wrong while trying to authenticate!\");\r\n                        });\r\n                    } else {\r\n                        setUserNameHelp(\"Username already exists!\")\r\n                    }\r\n                }\r\n            } else {\r\n                if (userName == null) {\r\n                    setUserNameHelp(\"Please enter a user name\");\r\n                }\r\n                if (password == null) {\r\n                    setPasswordHelp(\"Please enter a password\");\r\n                }\r\n                if (passwordRepeat == null) {\r\n                    setPasswordRepeatHelp(\"Please repeat the password\");\r\n                }\r\n            }\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n            setserverError(true)\r\n        }\r\n\r\n    }\r\n\r\n    async function usernameAlreadyTaken(userName) {\r\n        try {\r\n            var allUsers = await api.user.fetchUsers();\r\n            var { data } = allUsers.data;\r\n            var existingUser = getUser(userName, data);\r\n            return !(existingUser === undefined);\r\n        } catch (error) {\r\n            console.error(error)\r\n            return error\r\n        }\r\n    }\r\n\r\n\r\n    function signUpDataComplete(userName, password, passwordRepeat) {\r\n        if (userName != null && password != null && passwordRepeat != null) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function logInDataComplete(userName, password) {\r\n        if (userName.length > 0 && password.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function emptyHelpFields() {\r\n        setUserNameHelp(\"\");\r\n        setPasswordHelp(\"\");\r\n        setPasswordRepeatHelp(\"\");\r\n    }\r\n\r\n    async function checkIfUserNameAvailable(userName) {\r\n        const allUsers = await api.user.fetchUsers().then((res) => {\r\n            return res.data.data;\r\n        });\r\n        for (let i = 0; i < allUsers.length; i++) {\r\n            const element = allUsers[i];\r\n            if (element.username === userName) {\r\n                console.log(\"Username already exists\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    async function login(input) {\r\n        try {\r\n            new PromiseB(async (resolve, reject) => {\r\n                const res = await api.user.fetchUsers();\r\n                if(res){\r\n                    if (res.status === 200) {\r\n                        const { data } = res.data;\r\n                        const userInfo = getUser(input.userName, data);\r\n    \r\n                        var passwordCorrect = false;\r\n                        emptyHelpFields();\r\n    \r\n                        if (logInDataComplete(input.userName, input.password)) {\r\n                            if (userInfo != null) {\r\n                                passwordCorrect = authenticateUser(userInfo, input.password);\r\n                            }\r\n                            if (!passwordCorrect) {\r\n                                setPasswordHelp(\"Wrong user name or password\");\r\n                            } else {\r\n                                setUser(userInfo._id);\r\n                                setProgressSetting(userInfo.right_guesses_in_a_row)\r\n                            }\r\n                        } else {\r\n                            if (input.userName.length === 0) {\r\n                                setUserNameHelp(\"Please enter your user name\");\r\n                            }\r\n                            if (input.password.length === 0) {\r\n                                setPasswordHelp(\"Please enter your password\");\r\n                            }\r\n                        }\r\n                        if (passwordCorrect) {\r\n                            setLocalStorage(true, userInfo._id );\r\n                        }\r\n                        setAuth(passwordCorrect);\r\n                        return resolve(res.data);\r\n                    }\r\n\r\n                }\r\n                setserverError(true)\r\n                return reject(\"Something went wrong\");\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function getUser(userName, data) {\r\n        try {\r\n            const userData = new Map();\r\n            data.forEach((user) => {\r\n                userData.set(user.username, user);\r\n            });\r\n            return userData.get(userName);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async function getIdForUserName(userName) {\r\n        const data = {\r\n            userName: userName\r\n        };\r\n        const res = await api.user.getIdForUserName(data);\r\n        const userId = res.userId;\r\n        return userId;\r\n    }\r\n\r\n    function authenticateUser(userInfo, password) {\r\n        try {\r\n            return userInfo.password === password;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function setLocalStorage(isAuthorized, userId) {\r\n        if (isAuthorized) {\r\n            localStorage.setItem(\"isAuthorized\", true)\r\n            localStorage.setItem(\"userId\", userId)\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div >\r\n        {auth ? <Redirect to=\"/languages\" /> : null}\r\n        <h1 className=\"margin_top_small\">Vocabulary Trainer</h1>\r\n        <h2>Log in or sign up!</h2>\r\n        {serverError ? (\r\n          <Redirect to=\"/Error\" />\r\n        ) : (\r\n          <LogInFormsHandler\r\n            createUser={createUser}\r\n            login={login}\r\n            emptyHelpFields={emptyHelpFields}\r\n            userNameHelp={userNameHelp}\r\n            passwordHelp={passwordHelp}\r\n            passwordRepeatHelp={passwordRepeatHelp}\r\n          />\r\n        )}\r\n        <div className=\"fixed-bottom m-5 flex-end text-right\">\r\n          <span className=\"text-secondary \">Version: {version}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useGlobal } from \"reactn\";\r\n\r\nconst LanguageButton = (props) => {\r\n  const { language, id } = props.language;\r\n  const { getLanguage } = props;\r\n\r\n  const [, setLangID] = useGlobal(\"langID\");\r\n  const [, setLangName] = useGlobal(\"langName\");\r\n\r\n  const handleSubmitLocal = (event) => {\r\n    event.preventDefault();\r\n    getLanguage(id, language);\r\n    setLangID(id);\r\n    setLangName(language);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-lg-4 col-6\">\r\n      <form onSubmit={handleSubmitLocal}>\r\n        <input type=\"hidden\" value={language} name=\"language\"></input>\r\n        <button type=\"submit\" className=\"btn btn-primary margin_top col-lg-12 languages_option\">\r\n          {language}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageButton;","import React, {useGlobal} from \"reactn\";\r\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\n\r\nconst ReducedNavigation = () => {\r\n    const [, setAuth] = useGlobal(\"auth\");\r\n\r\n    function handleClick() {\r\n        localStorage.setItem(\"isAuthorized\", false)\r\n        localStorage.setItem(\"userId\", \"\")\r\n        setAuth(false);\r\n    }\r\n\r\n    return (\r\n        <Navbar id=\"navbar\" sticky=\"top\" className=\"white-background\" expand={\"*\"}>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={\"ml-auto\"}/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className={\"justify-content-end\"}>\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <LinkContainer to=\"/Settings\" className=\"menu_option settings\" >\r\n                            <NavItem className=\"menu_padding\">\r\n                                Account settings\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                            Logout\r\n                        </button>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default ReducedNavigation;","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useGlobal } from \"reactn\";\r\nimport \"../style.scss\";\r\nimport LanguageButton from \"../components/LanguageButton\";\r\nimport ReducedNavigation from \"../components/ReducedNavigation\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\";\r\n\r\nconst getLanguages = async () => {\r\n  const res = await api.language.getLanguages();\r\n  return res;\r\n};\r\n\r\nconst Languages = () => {\r\n  const [auth] = useGlobal(\"auth\");\r\n  const [langName, setLangName] = useGlobal(\"langName\");\r\n  const [langID, setLangID] = useGlobal(\"langID\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [serverError, setserverError] = useGlobal(\"serverError\");\r\n\r\n  useEffect(() => {\r\n    if (!serverError) {\r\n      serverIsRunning().then((isRunning) => {\r\n        if (isRunning) {\r\n          setserverError(false);\r\n        } else {\r\n          setserverError(true);\r\n        }\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLanguages().then((data) => {\r\n      if (data) {\r\n        setLanguages(data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getLanguage = (langID, langName) => {\r\n    console.group(\"Language\");\r\n    console.log(\"%c langID \", \"Background: #0CE66E\", langID);\r\n    console.log(\"%c langName \", \"Background: #0CE6E2\", langName);\r\n    console.groupEnd();\r\n    setLangName(langName);\r\n    setLangID(langID);\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={{ pathname: `/VocabularyList`, query: { langName, langID } }} />;\r\n  }\r\n\r\n  var i = 0;\r\n\r\n  return (\r\n    <div>\r\n      <ReducedNavigation />\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : localStorage.getItem(\"isAuthorized\") === \"false\" ||\r\n        localStorage.getItem(\"isAuthorized\") === false ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <h1 className=\"margin_top_small\">Languages</h1>\r\n          <h2>Select the language you want to practise.</h2>\r\n          <div className=\"row box\">\r\n            {languages.map((language) => {\r\n              return <LanguageButton key={i++} language={language} getLanguage={getLanguage} />;\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Languages;\r\n","import \"../style.scss\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport { Redirect } from \"react-router\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport React, {useGlobal, useEffect} from \"reactn\";\r\nimport {createRef, useState} from \"react\";\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\"\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nfunction Settings() {\r\n    const [auth, setAuth] = useGlobal(\"auth\");\r\n    const [user,] = useGlobal(\"user\");\r\n    let newName = createRef();\r\n    let newProgress = createRef();\r\n    let newpassword = createRef();\r\n    let newpassword2 = createRef();\r\n    const [show, setShow] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n    const [changed, setChanged] = useState(false);\r\n    const [passw, setpassw] = useState(false);\r\n    const [userInfo, setUserInfo] = useState(\"\");\r\n    let { width } = useWindowDimensions();\r\n    const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n    useEffect(() => {\r\n      serverIsRunning().then((isRunning) => {\r\n        if (isRunning) {\r\n          setserverError(false);\r\n        } else {\r\n          setserverError(true);\r\n        }\r\n      });\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleClose = (event, id) => {\r\n        if (event) { event.preventDefault(); }\r\n        if (id === \"1\") {\r\n            setShow(false);\r\n        }\r\n        else if (id === \"2\") {\r\n            setShow2(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleShow = (event, id) => {\r\n        setUserInfo(\"\");\r\n        if (event) { event.preventDefault(); }\r\n\r\n        if (passwordsOkay()) {\r\n            if (id === \"changeButton\") {\r\n                setShow(true);\r\n            }\r\n            else if (id === \"deleteButton\") {\r\n                setShow2(true);\r\n            }\r\n            setChanged(false);\r\n        }\r\n\r\n    }\r\n\r\n    const passwordsOkay = () => {\r\n        // Does user want to change password?\r\n        if ((newpassword.current.value !== \"\")) {\r\n            // When second password is not entered\r\n            if (newpassword2.current.value === \"\") {\r\n                setUserInfo(\"The password has to be entered twice.\");\r\n            } else /* When both passwords are entered */ {\r\n                // If passwords match\r\n                if (newpassword2.current.value === newpassword.current.value) {\r\n                    return true;\r\n                } else /* If passwords don't match */ {\r\n                    setUserInfo(\"Passwords don't match!\");\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        if (event) { event.preventDefault(); }\r\n        if (newpassword.current.value !== \"\") {\r\n            setpassw(true)\r\n        } else {\r\n            setpassw(false)\r\n        }\r\n    }\r\n\r\n    const cleanResponse = (obj) => {\r\n        for (let propName in obj) {\r\n            if (obj[propName] === null || obj[propName] === undefined || obj[propName] === \"\") {\r\n                delete obj[propName];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const changeInformation = async (event) => {\r\n        if (event) { event.preventDefault(); }\r\n        let toSend;\r\n        if (newpassword.current.value !== \"\") {\r\n            if (newpassword2.current.value === newpassword.current.value) {\r\n                toSend = {\r\n                    username: newName.current.value,\r\n                    password: newpassword.current.value,\r\n                    right_guesses_in_a_row: newProgress.current.value\r\n                }\r\n                console.log(toSend);\r\n            }\r\n        }\r\n        else {\r\n            toSend = {\r\n                username: newName.current.value,\r\n                right_guesses_in_a_row: newProgress.current.value\r\n\r\n            }\r\n\r\n        }\r\n        cleanResponse(toSend)\r\n\r\n        const res = await api.user.editUser(user, toSend);\r\n        if (res.data.success) {\r\n            setChanged(true);\r\n        }\r\n    }\r\n\r\n    const deleteAccount = async (event) => {\r\n        const res = await api.user.deleteUser(user);\r\n        if (res.data.success) {\r\n            setChanged(true);\r\n            localStorage.setItem(\"isAuthorized\", false)\r\n            localStorage.setItem(\"userId\", \"\")    \r\n            await setAuth(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {serverError ? (\r\n          <Redirect to=\"/Error\" />\r\n        ) : localStorage.getItem(\"isAuthorized\") === \"false\" ||\r\n          localStorage.getItem(\"isAuthorized\") === false ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <div id=\"content\" className=\"settings margin_top\">\r\n            <NavigationTop width={width} />\r\n            {width < 700 && <NavigationBottom />}\r\n            <form>\r\n              <h1 className=\"margin_top_small\">Settings</h1>\r\n              <h2 className={\"lead\"}>Choose the property that you want to change</h2>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">\r\n                  How many correct answers in a row lead to a new progress level?\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control col-lg-8 col-xs-12\"\r\n                  id=\"settings\"\r\n                  placeholder=\"\"\r\n                  ref={newProgress}\r\n                />\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">\r\n                  Change username\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-lg-8 col-xs-12\"\r\n                  id=\"settings\"\r\n                  placeholder=\"\"\r\n                  ref={newName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">\r\n                  Change password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control col-lg-8 col-xs-12\"\r\n                  id=\"settings\"\r\n                  placeholder=\"\"\r\n                  onChange={handleOnChange}\r\n                  ref={newpassword}\r\n                />\r\n              </div>\r\n              {passw && (\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">\r\n                    Re-enter password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control col-lg-8 col-xs-12\"\r\n                    id=\"settings\"\r\n                    placeholder=\"\"\r\n                    ref={newpassword2}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"warning\">{userInfo}</div>\r\n              <button className=\"btn btn-primary\" onClick={(e) => handleShow(e, \"changeButton\")}>\r\n                Save settings\r\n              </button>\r\n            </form>\r\n\r\n            <Button\r\n              variant={\"danger\"}\r\n              style={{ marginTop: \"1em\" }}\r\n              onClick={(e) => handleShow(e, \"deleteButton\")}\r\n            >\r\n              Delete Account\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={(e) => handleClose(e, \"1\")}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {changed ? \"Changed.\" : \"Are you sure that you want to save these changes?\"}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={(e) => handleClose(e, \"1\")}>\r\n                  Close\r\n                </Button>\r\n                {!changed && (\r\n                  <Button variant=\"primary\" onClick={changeInformation}>\r\n                    Save Changes\r\n                  </Button>\r\n                )}\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={show2} onHide={(e) => handleClose(e, \"2\")}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {changed\r\n                  ? \"Account Deleted.\"\r\n                  : \"Are you sure that you want to delete this account?\"}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={(e) => handleClose(e, \"2\")}>\r\n                  Close\r\n                </Button>\r\n                {!changed && (\r\n                  <Button variant=\"danger\" onClick={deleteAccount}>\r\n                    Delete Account\r\n                  </Button>\r\n                )}\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"reactn\";\r\n\r\nconst Pagination = ({ vocabsPerPage, totalVocabs, paginate }) => {\r\n    const pageNumbers = [];\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    for (let i = 1; i <= Math.ceil(totalVocabs / vocabsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    const handleClick = (number) => {\r\n        paginate(number);\r\n        setCurrentPage(number);\r\n    }\r\n\r\n    const checkIfCurrentPage = (number) => {\r\n        if (currentPage === number) {\r\n            return \"page_link_active\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"margin_top\">\r\n            <ul className=\"pagination\">\r\n                {\r\n                    pageNumbers.map(number => (\r\n                        <li key={number} className=\"page-item\">\r\n                            <span onClick={() => handleClick(number) } className={\"page-link page_link \" + checkIfCurrentPage(number)}>\r\n                                {number}\r\n                            </span>\r\n                        </li>\r\n\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useGlobal, useEffect } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getTranslation = async (english_word, lang_id, user) => {\r\n  const data = {\r\n    english_word: english_word,\r\n    lang_id: lang_id,\r\n    user_id: user,\r\n  };\r\n\r\n  const res = await api.vocab.getVocabAndTranslation(data);\r\n  return res.translation;\r\n};\r\n\r\nconst VocabRow = ({ english_word, progress, even }) => {\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [user] = useGlobal(\"user\");\r\n  const [translation, setTranslation] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getTranslation(english_word, langID, user).then((data) => {\r\n      setTranslation(data);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"row vocabulary_list_entry\"}>\r\n      <div className={\"col-xl-2 col-lg-2 col-md-3 col-4\" + (even ? \" blue_background\" : \"\")}>\r\n        {english_word}\r\n      </div>\r\n      <div className={\"col-xl-2 col-lg-2 col-md-3 col-4\" + (even ? \" blue_background\" : \"\")}>\r\n        {translation}\r\n      </div>\r\n      <div className={\"col-xl-1 col-lg-2 col-md-3 col-4\" + (even ? \" blue_background\" : \"\")}>\r\n        {progress}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabRow;\r\n","import React, {useGlobal, useState, useEffect} from \"reactn\";\r\nimport {Redirect} from \"react-router\";\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport VocabRow from \"../components/VocabRow\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\"\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nconst getProgressForUserAndLanguage = async (user_id, lang_id) => {\r\n    try {\r\n        const data = {\r\n            user_id: user_id,\r\n            lang_id: lang_id,\r\n        };\r\n        const res = await api.progress.getProgressForUserAndLanguage(data);\r\n        if (res.length < 50) {\r\n            // true if all words created\r\n            await createBasicVocab(user_id, lang_id);\r\n            return getProgressForUserAndLanguage(user_id, lang_id);\r\n        }\r\n        return res;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};\r\n\r\nconst createBasicVocab = async (user, id) => {\r\n    const basics = require(\"../basic_vocab.json\");\r\n    const vocabulary = basics.vocabulary;\r\n\r\n    Object.entries(vocabulary).forEach(async ([index, word]) => {\r\n        const data = {\r\n            language_id: id,\r\n            english_word: word,\r\n            user_id: user,\r\n        };\r\n        const res = await api.vocab.insert(data);\r\n        if (res.status === 200) {\r\n            api.progress.createProgress(data);\r\n        }\r\n    });\r\n    return true;\r\n};\r\n\r\nconst VocabularyList = (props) => {\r\n    const [user] = useGlobal(\"user\");\r\n    const [langID] = useGlobal(\"langID\");\r\n    const [langName] = useGlobal(\"langName\");\r\n    const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n    const [prog, setProg] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    let { width } = useWindowDimensions();\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [vocabsPerPage] = useState(25);\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n        getProgressForUserAndLanguage(user, langID).then((data) => {\r\n            console.log(\"isCancelled: \"+ isCancelled)\r\n            if (!isCancelled) {\r\n                setProg(data);\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                console.log(\"fetching cancelled\")\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return () => {\r\n            isCancelled = true;\r\n            console.log(\"unmounted.\" + isCancelled)\r\n        };\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n        serverIsRunning().then((isRunning) => {\r\n                console.log(\"Landing -> isRunning\", isRunning);\r\n                if (!isCancelled) {\r\n                    if (isRunning) {\r\n                        setserverError(false);\r\n                    } else {\r\n                        setserverError(true);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(\"server runtask cancelled\")\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    var key = 0;\r\n\r\n    const indexOfLastVocab = currentPage * vocabsPerPage;\r\n    const indexOfFirstVocab = indexOfLastVocab - vocabsPerPage;\r\n    const currentVocabs = prog ? prog.slice(indexOfFirstVocab, indexOfLastVocab) : null;\r\n\r\n    // Change page\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    //TODO catch data as json from database\r\n    return (\r\n        <>\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : localStorage.getItem(\"isAuthorized\") === \"false\" ||\r\n        localStorage.getItem(\"isAuthorized\") === false ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n\r\n                <div id=\"content\" className=\"vocabulary_list\">\r\n                    <NavigationTop width={width}/>\r\n                    {width < 700 && <NavigationBottom page={\"VocabularyList\"}/>}\r\n                    <div id=\"vocabulary_list\">\r\n                        <h1 className=\"margin_top_small\">Vocabulary overview</h1>\r\n                        <div className=\"row vocabulary_list_entry\">\r\n                            <div className=\"col-xl-2 col-lg-2 col-md-3 col-4 vocabulary_list_header\">English</div>\r\n                            <div className=\"col-xl-2 col-lg-2 col-md-3 col-4 vocabulary_list_header\">{langName}</div>\r\n                            <div className=\"col-xl-1 col-lg-2 col-md-3 col-4 vocabulary_list_header\">Progress</div>\r\n                        </div>\r\n\r\n                        {!loading && currentVocabs && currentVocabs.length > 0 ? (\r\n                            currentVocabs.map((progressObject) => {\r\n                                return (\r\n                                    <VocabRow\r\n                                        key={new Date().getTime() + key++}\r\n                                        english_word={progressObject.english_word}\r\n                                        progress={progressObject.progress}\r\n                                        translation=\"\"\r\n                                        even={key % 2 === 0 ? true : false}\r\n                                    />\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <div className=\"spinner-border m-5\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        )}\r\n                        <Pagination vocabsPerPage={vocabsPerPage} totalVocabs={prog.length} paginate={paginate}/>\r\n                    </div>\r\n                </div>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VocabularyList;\r\n","import React, { useGlobal, useState } from \"reactn\";\r\n\r\nconst VocabularyTraining_Options = (props) => {\r\n  const [language,] = useGlobal(\"langName\");\r\n  const [vocabNumber, setVocabNumber] = useState(25);\r\n  const [progress1, setProgress1] = useState(true);\r\n  const [progress2, setProgress2] = useState(true);\r\n  const [progress3, setProgress3] = useState(true);\r\n  const [training_options_radios, setTraining_options_radios] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { receiveInput } = props;\r\n    receiveInput({ vocabNumber, progress1, progress2, progress3, training_options_radios });\r\n    props.onClick();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    switch (name) {\r\n      case \"vocabNumber\":\r\n        setVocabNumber(value);\r\n        break;\r\n      case \"progress1\":\r\n        setProgress1(!progress1);\r\n        break;\r\n\r\n      case \"progress2\":\r\n        setProgress2(!progress2);\r\n        break;\r\n\r\n      case \"progress3\":\r\n        setProgress3(!progress3);\r\n        break;\r\n      case \"training_options_radios\":\r\n        setTraining_options_radios(value);\r\n        break;\r\n\r\n      default:\r\n        console.error(\"Oh..\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const { showButton } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Please set your training prefrences</h2>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12\" htmlFor=\"training_options_amount\">\r\n          How many vocabulary do you want to practise?\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control col-12\"\r\n            id=\"training_options_amount\"\r\n            defaultValue={25}\r\n            name=\"vocabNumber\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12\" htmlFor=\"training_options_amount\">\r\n          Train vocabulary with following progress:\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress1}\r\n              id=\"training_options_check_1\"\r\n              name=\"progress1\"\r\n              checked={progress1}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_1\">\r\n              1\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress2}\r\n              id=\"training_options_check_2\"\r\n              name=\"progress2\"\r\n              checked={progress2}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_2\">\r\n              2\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress3}\r\n              id=\"training_options_check_2\"\r\n              name=\"progress3\"\r\n              checked={progress3}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_2\">\r\n              3\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12 no_padding_left\" htmlFor=\"training_options_direction\">\r\n          Direction\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"training_options_radios\"\r\n              id=\"training_options_radios_1\"\r\n              value=\"fo_en\"\r\n              defaultChecked={true}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_radios_1\">\r\n              {`Show English, ask ${language}`}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"training_options_radios\"\r\n              id=\"training_options_radios_2\"\r\n              value=\"en_fo\"\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_radios_2\">\r\n              {`Show ${language}, ask English`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showButton ? (\r\n        <button type=\"submit\" className=\"btn btn-primary margin_top\">\r\n          Start training\r\n        </button>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Options;\r\n","import React, { useState, useEffect, useGlobal } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getProgress = async (query) => {\r\n  const res = await api.progress.filterProgress(query);\r\n  return res;\r\n};\r\n\r\nconst getVocabsById = async (id) => {\r\n  const res = await api.vocab.getVocabById(id);\r\n  return res;\r\n};\r\n\r\nconst VocabularyTraining_Queries = (props) => {\r\n  const [trainingVorab, setTrainingVorab] = useState([]);\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [progress] = useGlobal(\"progress\");\r\n  const [summary, setSummary] = useGlobal(\"summary\");\r\n  const [user] = useGlobal(\"user\");\r\n  const [progressSetting] = useGlobal(\"progressSetting\");\r\n  const [direction] = useGlobal(\"direction\");\r\n\r\n  const [falseInputCount, setFalseInputCount] = useState(0);\r\n  const [help, setHelp] = useState(null);\r\n  const [input, setInput] = useState(\"\");\r\n  const [iterate, setIterate] = useState(0);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n      const query = { user_id: user, language_id: langID, progress: progress };\r\n      getProgress(query).then((data) => {\r\n        if (data && data.success) {\r\n          getTrainingVocab(data.data);\r\n  \r\n          // reset Summary\r\n          setSummary([]);\r\n        }\r\n      });\r\n  \r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSkip = () => {\r\n    setHelp(\"\");\r\n    setFalseInputCount(0);\r\n    setIterate(iterate + 1);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const currentWord = trainingVorab[iterate];\r\n    const localSummary = summary;\r\n    localSummary.push({ currentWord, input });\r\n    setSummary(localSummary);\r\n\r\n    const idObj = {\r\n      user_id: user,\r\n      english_word: currentWord.english_word,\r\n      lang_id: langID,\r\n    };\r\n\r\n    if (input) {\r\n      let wellJustFakeIt = false;\r\n      let correct;\r\n\r\n      if (!currentWord.translation[langID]) {\r\n        // TODO: WHY CAN THIS EVEN HAPPEN? IT SHOULD NOT APPEAR FOR THIS LANGUAGE THEN!!!\r\n        console.error(\"Word not found in current language.\");\r\n        wellJustFakeIt = true;\r\n      } else {\r\n        correct =\r\n          direction === \"fo_en\"\r\n            ? input.toLowerCase().trim() === currentWord.translation[langID].toLowerCase()\r\n            : input.toLowerCase().trim() === currentWord.english_word.toLowerCase();\r\n      }\r\n\r\n      if (correct || wellJustFakeIt) {\r\n        // Word correct\r\n        // TODO: graphic reaction\r\n        setIterate(iterate + 1);\r\n        setInput(\"\");\r\n        setHelp(\"\");\r\n        setFalseInputCount(0);\r\n\r\n        // progressObj contains the ProgressObj before the update!\r\n        const progressObj = await api.progress.increaseRGIAR(idObj);\r\n\r\n        if (progressObj.progress === 1) {\r\n          if (progressObj.right_guesses_in_a_row === progressSetting - 1) {\r\n            api.progress.increaseProgress(idObj);\r\n            console.info(\"%c Progress updated!\", \"Background: #00ff55\");\r\n          }\r\n        } else if (progressObj.progress === 2) {\r\n          if (\r\n            progressObj.right_guesses_in_a_row === progressSetting - 1 ||\r\n            progressObj.right_guesses_in_a_row === progressSetting * 2 - 1\r\n          ) {\r\n            api.progress.increaseProgress(idObj);\r\n            console.info(\"%c Progress updated!\", \"Background: #33ff77\");\r\n          }\r\n        } else {\r\n          console.info(\"%c Maximum Progress level already achieved!\", \"Background: #0f0\");\r\n        }\r\n      } else {\r\n        api.progress.resetRGIAR(idObj);\r\n        setHelp(\"Unfortunately not correct! Please try again.\");\r\n        const newInputCount = falseInputCount + 1;\r\n        setFalseInputCount(newInputCount);\r\n        if (falseInputCount >= 1) {\r\n          const translationByDirection =\r\n            props.direction === \"fo_en\"\r\n              ? currentWord.translation[langID]\r\n              : currentWord.english_word;\r\n          setHelp(`Correct translation: ${translationByDirection} \\nPlease type it in to increase your learning effect.`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInput(inputValue);\r\n  };\r\n\r\n  const getTrainingVocab = async (sortedVocab) => {\r\n    const numberOfVocab = props.numberOfVocabs;\r\n\r\n    // VocabIds Aus DB:Progresses\r\n    const en_words = [];\r\n    sortedVocab.forEach((vocab) => {\r\n      en_words.push(vocab.english_word);\r\n    });\r\n\r\n    // Vocabs from DB:Vocabs\r\n    const vocabFromDb = await getVocabsById(en_words).then((data) => {\r\n      return data.data;\r\n    });\r\n\r\n    const vocabChoice = [];\r\n    if (vocabFromDb.length < numberOfVocab) {\r\n      setMessage(`Your selection contains only ${vocabFromDb.length} words.`);\r\n      resetMessageIn5s();\r\n    }\r\n\r\n    while (vocabChoice.length < vocabFromDb.length && vocabChoice.length < numberOfVocab) {\r\n      const number = Math.floor(Math.random() * vocabFromDb.length + 0);\r\n      if (!vocabChoice.includes(vocabFromDb[number])) {\r\n        vocabChoice.push(vocabFromDb[number]);\r\n      }\r\n    }\r\n    setTrainingVorab(vocabChoice);\r\n  };\r\n\r\n  const renderTrainingVocab = () => {\r\n    if (trainingVorab[iterate]) {\r\n      if (props.direction === \"fo_en\") {\r\n        // default\r\n        return trainingVorab[iterate][\"english_word\"];\r\n      }\r\n      return trainingVorab[iterate].translation[langID];\r\n    }\r\n    return \"error\";\r\n  };\r\n\r\n  const resetMessageIn5s = () => {\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"margin_top\">\r\n      {iterate < trainingVorab.length ? (\r\n        <form>\r\n          {message ? <p className=\"bg-warning p-1\">{message}</p> : null}\r\n          <h2>{`Translate! ${iterate + 1}/${trainingVorab.length}`}</h2>\r\n          <div className=\"form-group row\">\r\n            <label\r\n              className=\"col-lg-3 col-xs-12 no-padding-left\"\r\n              htmlFor=\"train_vocabulary_translation\"\r\n            >\r\n              {renderTrainingVocab()}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-lg-9 col-xs-12\"\r\n              id=\"train_vocabulary_translation\"\r\n              placeholder=\"type in translation\"\r\n              name=\"translationInput\"\r\n              onChange={handleInput}\r\n              value={input}\r\n            />\r\n          </div>\r\n          {help ? <p className=\"alert-warning\">{help}</p> : null}\r\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>\r\n            Submit and continue\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary ml-1\" onClick={handleSkip}>\r\n            Skip\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div>Completed! Show summary?</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Queries;\r\n","import React, { useEffect, useState } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getProgress = async (english_word, user, langID) => {\r\n  const data = await api.progress.searchProgress({ english_word, user_id: user, language_id: langID });\r\n  try {\r\n    return data.progress;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n  return -1;\r\n};\r\n\r\nconst SummaryRow = (props) => {\r\n  const { vocab, input, correct, english_word, user, langID } = props;\r\n  const [progress, setProgress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getProgress(english_word, user, langID).then((data) => {\r\n      setProgress(data);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`summary_list_entry ${\r\n        correct.toLowerCase().trim() === input.toLowerCase().trim() ? \"right\" : \"wrong\"\r\n        }`}\r\n    >\r\n\r\n      {\r\n        props.width > 700 ?\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">{vocab}</div>\r\n            <div className=\"col-3\">{input}</div>\r\n            <div className=\"col-3\">{correct}</div>\r\n            <div className=\"col-3\">{progress}</div>\r\n          </div>\r\n          :\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Given word: </div>\r\n              <div className=\"col-6\">{vocab}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Your translation: </div>\r\n              <div className=\"col-6\">{input}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Correct translation: </div>\r\n              <div className=\"col-6\">{correct}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Current progress: </div>\r\n              <div className=\"col-6\">{progress}</div>\r\n            </div>\r\n          </>\r\n      }\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default SummaryRow;\r\n","import React, { useGlobal } from \"reactn\";\r\nimport SummaryRow from \"../components/SummaryRow\";\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nconst VocabularyTraining_Summary = (props) => {\r\n  const [summary] = useGlobal(\"summary\");\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [user] = useGlobal(\"user\");\r\n  const [direction] = useGlobal(\"direction\");\r\n\r\n  let { width } = useWindowDimensions();\r\n\r\n  let i = 0;\r\n\r\n  return (\r\n    <div id=\"training_summary\" className=\"margin_top\">\r\n      <h2>Training summary</h2>\r\n\r\n      {width > 700 ? (\r\n        <div className=\"row vocabulary_list_entry\">\r\n          <div className=\"col-3 vocabulary_list_header\">Given word</div>\r\n          <div className=\"col-3 vocabulary_list_header\">Your translation</div>\r\n          <div className=\"col-3 vocabulary_list_header\">Correct translation</div>\r\n          <div className=\"col-3 vocabulary_list_header\">Current Progress</div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      {summary.map((entry) => {\r\n        const correctTranslation = entry.currentWord.translation[langID]\r\n          ? entry.currentWord.translation[langID]\r\n          : \"HOOOOOOW\";\r\n        i++;\r\n        return (\r\n          <SummaryRow\r\n            key={i++}\r\n            vocab={\r\n              direction === \"fo_en\"\r\n                ? entry.currentWord.english_word\r\n                : entry.currentWord.translation[langID]\r\n            }\r\n            input={entry.input}\r\n            correct={direction === \"fo_en\" ? correctTranslation : entry.currentWord.english_word}\r\n            english_word={entry.currentWord.english_word}\r\n            langID={langID}\r\n            user={user}\r\n            width={width}\r\n            test={console.log(\"entry.currentWord\", entry.currentWord.translation[langID])}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Summary;\r\n","import React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport Options from \"../components/VocabularyTraining_Options\";\r\nimport Queries from \"../components/VocabularyTraining_Queries\";\r\nimport Summary from \"../components/VocabularyTraining_Summary\";\r\nimport serverIsRunning from \"../helper\"\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nfunction VocabularyTraining() {\r\n  const [direction, setDirection] = useGlobal(\"direction\");\r\n  const [language, ] = useGlobal(\"language\");\r\n  const [numberOfVocab, setNumberOfVocab] = useGlobal(\"numberOfVocab\");\r\n  const [progress, setProgress] = useGlobal(\"progress\");\r\n  const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n  const [buttonState, setButtonState] = useState(\"options\");\r\n  const [buttonText, setButtonText] = useState(\"Start training\");\r\n  const [savedSettings, setSavedSettings] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const [showQueries, setShowQueries] = useState(false);\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  let {width} = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const changeView = () => {\r\n    if (buttonState === \"options\") {\r\n      setButtonState(\"queries\");\r\n      setShowOptions(false);\r\n      setShowQueries(true);\r\n      setShowSummary(false);\r\n      setButtonText(\"Stop training\");\r\n    } else if (buttonState === \"queries\") {\r\n      setButtonState(\"summary\");\r\n      setShowOptions(false);\r\n      setShowQueries(false);\r\n      setShowSummary(true);\r\n      setButtonText(\"Start new training\");\r\n    } else if (buttonState === \"summary\") {\r\n      setButtonState(\"options\");\r\n      setShowOptions(true);\r\n      setShowQueries(false);\r\n      setShowSummary(false);\r\n      setButtonText(\"Start training\");\r\n      setSavedSettings(false);\r\n    }\r\n  };\r\n\r\n  const receiveInput = (input) => {\r\n    setSavedSettings(true);\r\n    if (input.vocabNumber === 0){\r\n      setNumberOfVocab(25);\r\n    } else {\r\n      setNumberOfVocab(input.vocabNumber);\r\n    }\r\n    const progressArray = [];\r\n    if (input.progress1) {\r\n      progressArray.push(1);\r\n    }\r\n    if (input.progress2) {\r\n      progressArray.push(2);\r\n    }\r\n    if (input.progress3) {\r\n      progressArray.push(3);\r\n    }\r\n    setProgress(progressArray);\r\n    console.log(\"receiveInput -> input.training_options_radios\", input.training_options_radios)\r\n        if (input.training_options_radios) {\r\n      setDirection(input.training_options_radios);\r\n    } else {\r\n      setDirection(\"fo_en\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : localStorage.getItem(\"isAuthorized\") === \"false\" ||\r\n        localStorage.getItem(\"isAuthorized\") === false ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <div id=\"content\" className=\"vocabulary_training\">\r\n          <NavigationTop width={width} />\r\n          {width < 700 && <NavigationBottom page={\"VocabularyTraining\"} />}\r\n          <h1 className=\"margin_top_small\">Vocabulary Training</h1>\r\n          {showOptions && !savedSettings ? (\r\n            <Options receiveInput={receiveInput} showButton={!savedSettings} onClick={changeView} />\r\n          ) : null}\r\n          {showQueries ? (\r\n            <Queries\r\n              show={false}\r\n              numberOfVocabs={numberOfVocab}\r\n              progress={progress}\r\n              direction={direction}\r\n              language={language}\r\n            />\r\n          ) : null}\r\n          {showSummary ? <Summary show={false} /> : null}\r\n          {savedSettings ? (\r\n            <button type=\"button\" className=\"btn btn-primary margin_top\" onClick={changeView}>\r\n              {`${buttonText}`}\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VocabularyTraining;\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport AddVocabulary from './pages/AddVocabulary'\r\nimport Error from './pages/ErrorPage'\r\nimport Landing from \"./pages/Landing\"\r\nimport Languages from './pages/Languages'\r\nimport Settings from './pages/Settings'\r\nimport VocabularyList from './pages/VocabularyList'\r\nimport VocabularyTraining from './pages/VocabularyTraining'\r\n\r\n\r\n\r\nconst Routes = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route path='/Languages' component={Languages} />\r\n            <Route path='/VocabularyList' component={VocabularyList} />\r\n            <Route path='/AddVocabulary' component={AddVocabulary} />\r\n            <Route path='/VocabularyTraining' component={VocabularyTraining} />\r\n            <Route path='/Settings' component={Settings} />\r\n            <Route path='/*' component={Error} />\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Routes\r\n","import React from \"reactn\";\r\nimport Router from \"./Router\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport './customs.scss';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Container>\r\n                <Router/>\r\n            </Container>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React, { setGlobal } from \"reactn\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\n\r\n// FIXME: FOR DEV REASONS SET ON TRUE, BUT SET FALSE FOR PRODUCTIVE!\r\n// FIXME: REMOVE USERID AND LANGNAME AND LANGID BEFORE RELEASE!\r\nsetGlobal({\r\n  user: \"\",\r\n  progress: [1],\r\n  numberOfVocab: 25,\r\n  direction: \"fo_en\",\r\n  langName: \"German\",\r\n  langID: \"de\",\r\n  summary: [],\r\n  progressSetting: 3,\r\n  serverError: false,\r\n});\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/003-plus.fbcff910.svg\";","module.exports = __webpack_public_path__ + \"static/media/007-bearbeiten.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-liste.ad43a8d6.svg\";"],"sourceRoot":""}