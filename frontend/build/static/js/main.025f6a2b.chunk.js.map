{"version":3,"sources":["lib/error.svg","components/NavigationBottom.js","components/NavigationTop.js","api.js","helper.js","components/Windowsize.js","pages/AddVocabulary.js","pages/ErrorPage.js","components/LogInForms.js","components/SignUpButton.js","pages/Landing.js","components/LanguageButton.js","components/ReducedNavigation.js","pages/Languages.js","pages/Settings.js","components/Pagination.js","components/VocabRow.js","pages/VocabularyList.js","components/VocabularyTraining_Options.js","components/VocabularyTraining_Queries.js","components/SummaryRow.js","components/VocabularyTraining_Summary.js","pages/VocabularyTraining.js","Router.js","App.js","index.js","assets/icons/003-plus.svg","assets/icons/007-bearbeiten.svg","assets/icons/005-liste.svg"],"names":["module","exports","NavigationBottom","props","useState","active1","setActive1","active2","setActive2","active3","setActive3","useEffect","page","Navbar","Nav","className","Container","Row","style","backgroundColor","Col","to","NavItem","src","train","width","height","alt","plus","overview","NavigationTop","useGlobal","setAuth","handleClick","expand","id","sticky","Toggle","aria-controls","Collapse","NavDropdown","title","Item","type","onClick","url","getStatus","a","axios","get","createUser","data","post","console","error","fetchUsers","getIdForUserName","res","editUser","userId","patch","deleteUser","delete","getVocabs","insertVocab","getVocabAndTranslation","getVocabsById","getLanguages","getProgress","searchProgress","filterProgress","query","params","increaseRGIAR","resetRGIAR","increaseProgress","getProgressForUserAndLanguage","createProgress","insert","getVocab","getVocabById","serverIsRunning","api","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","AddVocabulary","auth","langID","serverError","setserverError","user","color","setColor","info","setInfo","loading","setLoading","textinput","createRef","then","isRunning","addVocab","event","preventDefault","language_id","english_word","current","value","user_id","status","resProg","success","didAlreadyExist","log","htmlFor","placeholder","ref","disabled","role","ErrorPage","serverErrorLocal","setserverErrorLocal","setInterval","require","LogInForms","state","userName","password","passwordRepeat","userNameHelp","passwordHelp","passwordRepeatHelp","handleChange","bind","handleSubmit","target","name","this","setState","login","noAccount","onSubmit","defaultValue","onChange","React","Component","SignUpButton","emptyHelpFields","buttonText","Landing","setProgressSetting","setUser","setPasswordHelp","setPasswordRepeatHelp","setUserNameHelp","input","usernameAlreadyTaken","taken","validateCreateUser","signUpDataComplete","checkIfUserNameAvailable","userInfo","username","PromiseB","resolve","reject","allUsers","existingUser","getUser","undefined","logInDataComplete","length","i","passwordCorrect","authenticateUser","_id","right_guesses_in_a_row","userData","Map","forEach","set","LanguageButton","language","getLanguage","setLangID","setLangName","ReducedNavigation","Languages","langName","languages","setLanguages","redirect","setRedirect","group","groupEnd","pathname","map","key","Settings","newName","newProgress","newpassword","newpassword2","show","setShow","show2","setShow2","changed","setChanged","passw","setpassw","setUserInfo","handleClose","handleShow","passwordsOkay","cleanResponse","obj","propName","changeInformation","toSend","deleteAccount","e","Button","variant","marginTop","Modal","onHide","Header","closeButton","Title","Body","Footer","Pagination","vocabsPerPage","totalVocabs","paginate","pageNumbers","currentPage","setCurrentPage","Math","ceil","push","checkIfCurrentPage","number","getTranslation","lang_id","translation","VocabRow","progress","even","setTranslation","createBasicVocab","basics","vocabulary","Object","entries","word","VocabularyList","prog","setProg","indexOfLastVocab","indexOfFirstVocab","currentVocabs","slice","progressObject","Date","getTime","pageNumber","VocabularyTraining_Options","vocabNumber","setVocabNumber","progress1","setProgress1","progress2","setProgress2","progress3","setProgress3","training_options_radios","setTraining_options_radios","showButton","receiveInput","checked","defaultChecked","VocabularyTraining_Queries","trainingVorab","setTrainingVorab","summary","setSummary","progressSetting","direction","falseInputCount","setFalseInputCount","help","setHelp","setInput","iterate","setIterate","message","setMessage","getTrainingVocab","currentWord","localSummary","idObj","wellJustFakeIt","correct","toLowerCase","trim","progressObj","translationByDirection","sortedVocab","numberOfVocab","numberOfVocabs","en_words","vocab","vocabFromDb","vocabChoice","resetMessageIn5s","floor","random","includes","setTimeout","inputValue","SummaryRow","setProgress","VocabularyTraining_Summary","entry","test","VocabularyTraining","showOptions","setShowOptions","showQueries","setShowQueries","showSummary","setShowSummary","buttonState","setButtonState","setButtonText","savedSettings","setSavedSettings","setNumberOfVocab","setDirection","changeView","progressArray","Routes","exact","path","component","Error","App","Router","setGlobal","render","document","getElementById"],"mappings":"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","file":"static/js/main.025f6a2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.fec60437.svg\";","import React, { useEffect, useState } from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport plus from '../assets/icons/003-plus.svg';\r\nimport train from '../assets/icons/007-bearbeiten.svg';\r\nimport overview from '../assets/icons/005-liste.svg';\r\nimport './scss/navigation.scss';\r\n\r\n\r\nconst NavigationBottom = (props) => {\r\n    const [active1, setActive1] = useState('');\r\n    const [active2, setActive2] = useState('');\r\n    const [active3, setActive3] = useState('');\r\n\r\n    useEffect(() => {\r\n        switch (props.page) {\r\n            case 'VocabularyTraining':\r\n                setActive1('active');\r\n                break;\r\n            case 'AddVocabulary':\r\n                setActive2('active');\r\n                break;\r\n            case 'VocabularyList':\r\n                setActive3('active');\r\n                break;\r\n            default: setActive3('active');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <style>\r\n                {`\r\n                .navItem{\r\n                }\r\n                `}\r\n            </style>\r\n            <Navbar>\r\n                <Nav className=\"fixed-bottom\">\r\n                    <Container className={\"justify-content-center navcontainer\"}>\r\n                        <Row className={'navrow'} style={{backgroundColor: \"white\"}}>\r\n                            <Col className={active1}>\r\n                                <LinkContainer className={'navItem'} to=\"/VocabularyTraining\">\r\n                                    <NavItem>\r\n                                        <img className=\"svg\" src={train} width=\"20\" height=\"20\" alt={'go to Training'} />\r\n                                        <p>Train</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                            <Col className={active2}>\r\n                                <LinkContainer className={'navItem'} to=\"/AddVocabulary\">\r\n                                    <NavItem>\r\n                                        <img src={plus} width=\"20\" height=\"20\" alt={'add Vocabulary'} />\r\n                                        <p>Add</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                            <Col className={active3}>\r\n                                <LinkContainer className={'navItem'} to=\"/VocabularyList\">\r\n                                    <NavItem>\r\n                                        <img src={overview} width=\"20\" height=\"20\" alt={'go to overview'} />\r\n                                        <p>Overview</p>\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationBottom;\r\n","import React, {useGlobal} from \"reactn\";\r\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n//import useWindowDimensions from \"./Windowsize\";\r\n\r\nconst NavigationTop = (props) => {\r\n    const [, setAuth] = useGlobal(\"auth\");\r\n\r\n    function handleClick() {\r\n        setAuth(false);\r\n    }\r\n\r\n    return (\r\n        <Navbar expand=\"lg\" id=\"navbar\" className=\"white-background\" sticky=\"top\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={'ml-auto'}/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\" >\r\n\r\n                    {props.width > 700 &&\r\n                    <>\r\n                        <LinkContainer to=\"/VocabularyList\" className=\"menu_option vocabulary_list\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Overview\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/AddVocabulary\" className=\"menu_option add_vocabulary\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Add Vocabulary\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/VocabularyTraining\" className=\"menu_option vocabulary_training\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Training\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                    </>\r\n\r\n                    }\r\n\r\n\r\n                    {props.width > 700 ?\r\n                        <NavDropdown className={\"mr-sm-2 menu_option\"} id={\"basic-nav-dropdown\"} title={\"Settings\"}>\r\n                            <NavDropdown.Item className=\"menu_option\">\r\n                                <LinkContainer to=\"/Languages\" className=\"menu_option mr-sm-2\">\r\n                                    <NavItem className=\"menu_padding\">\r\n                                        Change language\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item className=\"menu_option\">\r\n                                <LinkContainer to=\"/Settings\" className=\"menu_option settings\">\r\n                                    <NavItem className=\"menu_padding\">\r\n                                        Account settings\r\n                                    </NavItem>\r\n                                </LinkContainer>\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item className=\"menu_option\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                                    Logout\r\n                                </button>\r\n                            </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        :\r\n                        <>\r\n                            <LinkContainer to=\"/Languages\" className=\"menu_option mr-sm-2\">\r\n                                <NavItem className=\"menu_padding\">\r\n                                    Change language\r\n                                </NavItem>\r\n                            </LinkContainer>{\" \"}\r\n                            <LinkContainer to=\"/Settings\" className=\"menu_option settings\">\r\n                                <NavItem className=\"menu_padding\">\r\n                                    Account settings\r\n                                </NavItem>\r\n                            </LinkContainer>\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                                Logout\r\n                            </button>\r\n                        </>\r\n                    }\r\n\r\n\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nexport default NavigationTop;\r\n","import axios from \"axios\";\r\n\r\n// constants\r\nconst url = \"http://localhost:8080\";\r\n\r\n\r\n// User -------------------------------------------------------------\r\n  const getStatus = async () => {\r\n    return axios.get(`${url}/Users/status`)\r\n  }\r\n\r\nconst createUser = async (data) => {\r\n  try {\r\n    return axios.post(`${url}/Users`, data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst fetchUsers = async () => {\r\n  try {\r\n    return await axios.get(`${url}/Users`);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getIdForUserName = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Users/getIdForUserName`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst editUser = async (userId,data) => {\r\n  try {\r\n    return await axios.patch(`${url}/Users/${userId}`,{data})\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst deleteUser = async (userId) =>{\r\n  try {\r\n    return await axios.delete(`${url}/Users/${userId}`)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\n\r\n// Vocab ------------------------------------------------------------\r\n\r\nconst getVocabs = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst insertVocab = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/insert`, data);\r\n    return res;\r\n  } catch (error) {\r\n    return error\r\n  }\r\n};\r\n\r\nconst getVocabAndTranslation = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getVocabAndTranslation`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst getVocabsById = async (id) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getByIdArray`, id);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Language ---------------------------------------------------------\r\n\r\nconst getLanguages = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Languages`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Progress ---------------------------------------------------------\r\n\r\nconst getProgress = async () => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/getProgress`);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst searchProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/searchProgress`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst filterProgress = async (query) => {\r\n  try {\r\n    const res = await axios.get(`${url}/Vocab/filterProgress`,  {params: query});\r\n    return res.data\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst increaseRGIAR = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/increaseRGIAR`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst resetRGIAR = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/resetRGIAR`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst increaseProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/increaseProgress`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getProgressForUserAndLanguage = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/getProgressForUserAndLanguage`, data);\r\n    return res.data ? (res.data ? res.data.data : res) : res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst createProgress = async (data) => {\r\n  try {\r\n    const res = await axios.post(`${url}/Vocab/createProgress`, data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  language: {\r\n    getLanguages: () => getLanguages(),\r\n  },\r\n  user: {\r\n    createUser: (data) => createUser(data),\r\n    fetchUsers: () => fetchUsers(),\r\n    editUser: (id,data) => editUser(id,data),\r\n    getIdForUserName: (data) => getIdForUserName(data),\r\n    deleteUser: (data)=> deleteUser(data)\r\n  },\r\n  vocab: {\r\n    insert: (data) => insertVocab(data),\r\n    getVocab: () => getVocabs(),\r\n    getVocabAndTranslation: (data) => getVocabAndTranslation(data),\r\n    getVocabById: (id) => getVocabsById(id)\r\n  },\r\n  progress: {\r\n    getProgress: () => getProgress(),\r\n    searchProgress: (data) => searchProgress(data),\r\n    filterProgress: (id) => filterProgress(id),\r\n    getProgressForUserAndLanguage: (data) => getProgressForUserAndLanguage(data),\r\n    increaseRGIAR: (data) => increaseRGIAR(data),\r\n    resetRGIAR: (data) => resetRGIAR(data),\r\n    increaseProgress: (data) => increaseProgress(data),\r\n    createProgress: (data)=> createProgress(data)\r\n  }, \r\n  status: {\r\n    get: () => getStatus(),\r\n  }\r\n};\r\n","import api  from \"./api\"\r\n\r\nconst serverIsRunning = async () => {\r\n    try {\r\n        await api.status.get()\r\n        return true\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default serverIsRunning","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React, { useGlobal, useState, createRef, useEffect } from \"reactn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\";\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nconst AddVocabulary = () => {\r\n  const [auth] = useGlobal(\"auth\");\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [serverError, setserverError] = useGlobal(\"serverError\");\r\n  const [user] = useGlobal(\"user\");\r\n\r\n  const [color, setColor] = useState(\"\");\r\n  const [info, setInfo] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let textinput = createRef();\r\n  let { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const addVocab = async (event) => {\r\n    event.preventDefault();\r\n    setInfo(\"\");\r\n    setColor(\"no-color\");\r\n    setLoading(true);\r\n    const data = {\r\n      language_id: langID,\r\n      english_word: textinput.current.value,\r\n      user_id: user,\r\n    };\r\n    const res = await api.vocab.insert(data);\r\n\r\n    if (res.status === 200) {\r\n      const resProg = await api.progress.createProgress(data);\r\n      if (resProg.success) {\r\n        if (resProg.didAlreadyExist) {\r\n          setInfo(\"This word is already in your collection.\");\r\n          setColor(\"info\");\r\n        } else {\r\n          setInfo(\"Your word was successfully added.\");\r\n          setColor(\"right\");\r\n        }\r\n      } else {\r\n        setInfo(\"An error occured. Please try again later.\");\r\n        setColor(\"wrong\");\r\n      }\r\n    } else {\r\n      console.log(\"addVocab -> res\", res);\r\n      setInfo(\"Word not found. Please check the spelling.\");\r\n      setColor(\"wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"content\" className=\"add_vocabulary\">\r\n      <NavigationTop width={width} />\r\n      {width < 700 && <NavigationBottom page={\"AddVocabulary\"} />}\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : (\r\n          <form>\r\n            <h1 className=\"margin_top_small\">Add vocabulary</h1>\r\n            <h2>Enter the word you want to add</h2>\r\n            <div className=\"form-group row\">\r\n              <label\r\n                className=\"col-lg-2 col-md-3 col-sm-3 col-12 no-padding-left\"\r\n                htmlFor=\"add_vocabulary_english\"\r\n              >\r\n                English\r\n            </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-lg-10 col-md-9 col-sm-9 col-12\"\r\n                id=\"add_vocabulary_english\"\r\n                placeholder=\"type in English word\"\r\n                ref={textinput}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary margin_top_small\"\r\n              onClick={addVocab}\r\n              disabled={loading}\r\n            >\r\n              {loading ? (\r\n                <div className=\"spinner-border \" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              ) : (\r\n                  \"Add vocabulary\"\r\n                )}\r\n            </button>\r\n            <Link to=\"/VocabularyList\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary margin_left grey_button margin_top_small\"\r\n              >\r\n                Show overview\r\n            </button>\r\n            </Link>\r\n          </form>\r\n        )}\r\n      <div className={\"p-1 inline_block margin_top \" + color}>{info}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVocabulary;\r\n","import React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport \"../style.scss\";\r\nimport serverIsRunning from \"../helper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorPage = () => {\r\n  const [, setserverError] = useGlobal(\"serverError\");\r\n  const [serverErrorLocal, setserverErrorLocal] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setLoading(true);\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n        setserverErrorLocal(false);\r\n        setLoading(false);\r\n      } else {\r\n        setserverError(true);\r\n        setserverErrorLocal(true);\r\n        setInterval(() => {\r\n          setLoading(false);\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"margin_top_small\">Oh no!</h1>\r\n      <div className=\"d-flex p-2 flex-column\">\r\n        <img style={{ height: \"350px\" }} src={require(\"../lib/error.svg\")} className=\"m-4\" alt=\"error-icon\" />\r\n        {serverErrorLocal ? (\r\n          <div className=\"alert alert-danger m-4\">Network Error! Please try again later!</div>\r\n        ) : null}\r\n        <div className=\"alert alert-warning m-4 d-flex justify-content-between align-items-center\">\r\n          {`Check Server Status: ${serverErrorLocal ? \"Still down 😔\" : \"Up Again! 😃\"}`}\r\n          {loading ? (\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          ) : null}\r\n          <button type=\"button\" className=\"btn-warning btn btn-primary\" onClick={handleClick}>\r\n            Check\r\n          </button>\r\n        </div>\r\n        {serverErrorLocal ? null : (\r\n          <Link to=\"/\" className=\"m-4\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-success btn btn-primary w-100\"\r\n              onClick={handleClick}\r\n            >\r\n              Back to login!\r\n            </button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\n\r\nclass LogInForms extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { userName: \"\", password: \"\", passwordRepeat: \"\", userNameHelp: \"\", passwordHelp: \"\", passwordRepeatHelp: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {    \r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { createUser, login } = this.props;\r\n\r\n    switch (event.target.name) {\r\n      case \"noAccount\":\r\n        createUser(this.state);\r\n        break;\r\n\r\n      default:\r\n        login(this.state);\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { noAccount } = this.props;\r\n    const { userNameHelp } = this.props;\r\n    const { passwordHelp } = this.props;\r\n    const { passwordRepeatHelp } = this.props;\r\n\r\n    if (noAccount) {\r\n      return (\r\n        <fieldset className=\"box\">\r\n          <form onSubmit={this.handleSubmit} name=\"noAccount\" id=\"signUpForm\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-username\">\r\n                User name\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n                <input\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"login-username\"\r\n                  placeholder=\"Choose a user name\"\r\n                  defaultValue={this.state.userName}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{userNameHelp}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n                Password\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"login-password\"\r\n                  placeholder=\"Choose a password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{passwordHelp}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n                Repeat password\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n                <input\r\n                  name=\"passwordRepeat\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"login-password\"\r\n                  placeholder=\"Repeat password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{passwordRepeatHelp}</small>\r\n              </div>\r\n            </div>\r\n            <input type=\"submit\" value=\"Sign Up\" className=\"btn btn-primary\" />\r\n          </form>\r\n        </fieldset>\r\n      );\r\n    } else {\r\n      return (\r\n        <fieldset className=\"box\">\r\n          <form onSubmit={this.handleSubmit} name=\"hasAccount\" id=\"logInForm\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-username\">\r\n                User name\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n                <input\r\n                  type=\"username\"\r\n                  className=\"form-control\"\r\n                  id=\"login-username\"\r\n                  placeholder=\"Enter user name\"\r\n                  name=\"userName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{userNameHelp}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-lg-2 col-xs-12 no-padding\" htmlFor=\"login-password\">\r\n                Password\r\n              </label>\r\n              <div className=\"col-lg-10 col-xs-12 no-padding\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"login-password\"\r\n                  placeholder=\"Enter password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <small className=\"form-text text-muted\">{passwordHelp}</small>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Log in\r\n            </button>\r\n          </form>\r\n        </fieldset>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LogInForms;\r\n","import React from \"react\";\r\nimport LogInForms from \"./LogInForms\";\r\n\r\nclass SignUpButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { noAccount: false, buttonText: \"No account?\" };\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { emptyHelpFields } = this.props;\r\n        emptyHelpFields();\r\n        if (this.state.noAccount === false) {\r\n            this.setState({\r\n                noAccount: true,\r\n                buttonText: \"Already got an account?\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                noAccount: false,\r\n                buttonText: \"No account?\"\r\n            });\r\n            emptyHelpFields();\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { createUser, login } = this.props;\r\n        const { userNameHelp } = this.props;\r\n        const { passwordHelp } = this.props;\r\n        const { passwordRepeatHelp } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <LogInForms noAccount={this.state.noAccount} createUser={createUser} login={login} userNameHelp={userNameHelp} passwordHelp={passwordHelp} passwordRepeatHelp={passwordRepeatHelp}/>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary marginleft margin_top grey_button\"\r\n                    onClick={this.handleClick}\r\n                >\r\n                    {this.state.buttonText}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpButton;\r\n\r\n\r\n","import PromiseB from \"bluebird\";\r\nimport React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"../style.scss\";\r\nimport SignUpButton from \"../components/SignUpButton\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\"\r\n\r\nfunction Landing() {\r\n    const [, setProgressSetting] = useGlobal(\"progressSetting\");\r\n    const [, setUser] = useGlobal(\"user\");\r\n    const [auth, setAuth] = useGlobal(\"auth\");\r\n    const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n    const [passwordHelp, setPasswordHelp] = useState(\"\");\r\n    const [passwordRepeatHelp, setPasswordRepeatHelp] = useState(\"\");\r\n    const [userNameHelp, setUserNameHelp] = useState(\"\");\r\n\r\n    async function createUser(input) {\r\n        const userName = input.userName ? input.userName : null;\r\n        const password = input.password ? input.password : null;\r\n        const passwordRepeat = input.passwordRepeat ? input.passwordRepeat : null;\r\n        emptyHelpFields();\r\n        usernameAlreadyTaken(userName).then((taken) => validateCreateUser(userName, taken, password, passwordRepeat));\r\n    }\r\n\r\n    useEffect(() => {\r\n       serverIsRunning().then(isRunning => {\r\n           if (isRunning) {\r\n               setserverError(false)\r\n           } else {\r\n               setserverError(true)\r\n           }\r\n       })\r\n       // eslint-disable-next-line\r\n    }, [])    \r\n\r\n    async function validateCreateUser(userName, usernameAlreadyTaken, password, passwordRepeat) {\r\n        try {\r\n            if (signUpDataComplete(userName, password, passwordRepeat)) {\r\n                if (usernameAlreadyTaken === true) {\r\n                    setUserNameHelp(\"Username is already taken. Please choose a different one.\");\r\n                }\r\n                if (password !== passwordRepeat) {\r\n                    setPasswordHelp(\"Passwords don't match\");\r\n                    setPasswordRepeatHelp(\"Passwords don't match\");\r\n                } else {\r\n                    const isAvailable = await checkIfUserNameAvailable(userName);\r\n                    if (isAvailable) {\r\n                        console.info(\"Saving...\", { userName, password, passwordRepeat });\r\n    \r\n                        const userInfo = {\r\n                            username: userName,\r\n                            password: password,\r\n                        };\r\n    \r\n                        return new PromiseB(async (resolve, reject) => {\r\n                            const res = await api.user.createUser(userInfo);\r\n                            if (res) {\r\n                                if (res.status === 200) {\r\n                                    setAuth(true);\r\n                                    const userId = await getIdForUserName(userName);\r\n                                    setUser(userId);\r\n                                    return resolve(res.data);\r\n                                }\r\n                            }\r\n                            setAuth(false);\r\n                            return reject(\"Something went wrong while trying to authenticate!\");\r\n                        });\r\n                    } else {\r\n                        setUserNameHelp(\"Username already exists!\")\r\n                    }\r\n                }\r\n            } else {\r\n                if (userName == null) {\r\n                    setUserNameHelp(\"Please enter a user name\");\r\n                }\r\n                if (password == null) {\r\n                    setPasswordHelp(\"Please enter a password\");\r\n                }\r\n                if (passwordRepeat == null) {\r\n                    setPasswordRepeatHelp(\"Please repeat the password\");\r\n                }\r\n            }\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n            setserverError(true)\r\n        }\r\n\r\n    }\r\n\r\n    async function usernameAlreadyTaken(userName) {\r\n        try {\r\n            var allUsers = await api.user.fetchUsers();\r\n            var { data } = allUsers.data;\r\n            var existingUser = getUser(userName, data);\r\n            return !(existingUser === undefined);\r\n        } catch (error) {\r\n            console.error(error)\r\n            return error\r\n        }\r\n    }\r\n\r\n\r\n    function signUpDataComplete(userName, password, passwordRepeat) {\r\n        if (userName != null && password != null && passwordRepeat != null) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function logInDataComplete(userName, password) {\r\n        if (userName.length > 0 && password.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function emptyHelpFields() {\r\n        setUserNameHelp(\"\");\r\n        setPasswordHelp(\"\");\r\n        setPasswordRepeatHelp(\"\");\r\n    }\r\n\r\n    async function checkIfUserNameAvailable(userName) {\r\n        const allUsers = await api.user.fetchUsers().then((res) => {\r\n            return res.data.data;\r\n        });\r\n        for (let i = 0; i < allUsers.length; i++) {\r\n            const element = allUsers[i];\r\n            if (element.username === userName) {\r\n                console.log(\"Username already exists\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    async function login(input) {\r\n        try {\r\n            new PromiseB(async (resolve, reject) => {\r\n                const res = await api.user.fetchUsers();\r\n                if(res){\r\n                    if (res.status === 200) {\r\n                        const { data } = res.data;\r\n                        const userInfo = getUser(input.userName, data);\r\n    \r\n                        var passwordCorrect = false;\r\n                        emptyHelpFields();\r\n    \r\n                        if (logInDataComplete(input.userName, input.password)) {\r\n                            if (userInfo != null) {\r\n                                passwordCorrect = authenticateUser(userInfo, input.password);\r\n                            }\r\n                            if (!passwordCorrect) {\r\n                                setPasswordHelp(\"Wrong user name or password\");\r\n                            } else {\r\n                                setUser(userInfo._id);\r\n                                setProgressSetting(userInfo.right_guesses_in_a_row)\r\n                            }\r\n                        } else {\r\n                            if (input.userName.length === 0) {\r\n                                setUserNameHelp(\"Please enter your user name\");\r\n                            }\r\n                            if (input.password.length === 0) {\r\n                                setPasswordHelp(\"Please enter your password\");\r\n                            }\r\n                        }\r\n    \r\n                        setAuth(passwordCorrect);\r\n                        return resolve(res.data);\r\n                    }\r\n\r\n                }\r\n                setserverError(true)\r\n                return reject(\"Something went wrong\");\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function getUser(userName, data) {\r\n        try {\r\n            const userData = new Map();\r\n            data.forEach((user) => {\r\n                userData.set(user.username, user);\r\n            });\r\n            return userData.get(userName);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async function getIdForUserName(userName) {\r\n        const data = {\r\n            userName: userName\r\n        };\r\n        const res = await api.user.getIdForUserName(data);\r\n        const userId = res.userId;\r\n        return userId;\r\n    }\r\n\r\n    function authenticateUser(userInfo, password) {\r\n        try {\r\n            return userInfo.password === password;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {auth ? <Redirect to=\"/languages\" /> : null}\r\n        <h1 className=\"margin_top_small\">Vocabulary Trainer</h1>\r\n        <h2>Log in or sign up!</h2>\r\n        {serverError ? (\r\n          <Redirect to=\"/Error\"/>\r\n        ) : (\r\n          <SignUpButton\r\n            createUser={createUser}\r\n            login={login}\r\n            emptyHelpFields={emptyHelpFields}\r\n            userNameHelp={userNameHelp}\r\n            passwordHelp={passwordHelp}\r\n            passwordRepeatHelp={passwordRepeatHelp}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useGlobal } from \"reactn\";\r\n\r\nconst LanguageButton = (props) => {\r\n  const { language, id } = props.language;\r\n  const { getLanguage } = props;\r\n\r\n  const [, setLangID] = useGlobal(\"langID\");\r\n  const [, setLangName] = useGlobal(\"langName\");\r\n\r\n  const handleSubmitLocal = (event) => {\r\n    event.preventDefault();\r\n    getLanguage(id, language);\r\n    setLangID(id);\r\n    setLangName(language);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-lg-4 col-6\">\r\n      <form onSubmit={handleSubmitLocal}>\r\n        <input type=\"hidden\" value={language} name=\"language\"></input>\r\n        <button type=\"submit\" className=\"btn btn-primary margin_top col-lg-12 languages_option\">\r\n          {language}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageButton;","import React, {useGlobal} from \"reactn\";\r\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\n\r\nconst ReducedNavigation = () => {\r\n    const [, setAuth] = useGlobal(\"auth\");\r\n\r\n    function handleClick() {\r\n        setAuth(false);\r\n    }\r\n\r\n    return (\r\n        <Navbar id=\"navbar\" sticky=\"top\" className=\"white-background\" expand={\"*\"}>\r\n            <Nav className=\"ml-auto\">\r\n                <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" >\r\n                    <NavDropdown.Item>\r\n                        <LinkContainer to=\"/Settings\" className=\"menu_option settings\">\r\n                            <NavItem className=\"menu_padding\">\r\n                                Account settings\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item className=\"menu_option\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                            Logout\r\n                        </button>\r\n                    </NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default ReducedNavigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useGlobal } from \"reactn\";\r\nimport \"../style.scss\";\r\nimport LanguageButton from \"../components/LanguageButton\";\r\nimport ReducedNavigation from \"../components/ReducedNavigation\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\";\r\n\r\nconst getLanguages = async () => {\r\n  const res = await api.language.getLanguages();\r\n  return res;\r\n};\r\n\r\nconst Languages = () => {\r\n  const [auth] = useGlobal(\"auth\");\r\n  const [langName, setLangName] = useGlobal(\"langName\");\r\n  const [langID, setLangID] = useGlobal(\"langID\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [serverError, setserverError] = useGlobal(\"serverError\");\r\n\r\n  useEffect(() => {\r\n    if (!serverError) {\r\n      serverIsRunning().then((isRunning) => {\r\n        if (isRunning) {\r\n          setserverError(false);\r\n        } else {\r\n          setserverError(true);\r\n        }\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLanguages().then((data) => {\r\n      if (data) {\r\n        setLanguages(data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const getLanguage = (langID, langName) => {\r\n    console.group(\"Language\");\r\n    console.log(\"%c langID \", \"Background: #0CE66E\", langID);\r\n    console.log(\"%c langName \", \"Background: #0CE6E2\", langName);\r\n    console.groupEnd();\r\n    setLangName(langName);\r\n    setLangID(langID);\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={{ pathname: `/VocabularyList`, query: { langName, langID } }} />;\r\n  }\r\n\r\n  var i = 0;\r\n\r\n  return (\r\n    <div>\r\n      <ReducedNavigation />\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <h1 className=\"margin_top_small\">Languages</h1>\r\n          <h2>Select the language you want to practise.</h2>\r\n          <div className=\"row box\">\r\n            {languages.map((language) => {\r\n              return <LanguageButton key={i++} language={language} getLanguage={getLanguage} />;\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Languages;\r\n","import \"../style.scss\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport { Redirect } from \"react-router\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport React, {useGlobal, useEffect} from \"reactn\";\r\nimport {createRef, useState} from \"react\";\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\"\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nfunction Settings() {\r\n    const [auth, setAuth] = useGlobal(\"auth\");\r\n    const [user,] = useGlobal(\"user\");\r\n    let newName = createRef();\r\n    let newProgress = createRef();\r\n    let newpassword = createRef();\r\n    let newpassword2 = createRef();\r\n    const [show, setShow] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n    const [changed, setChanged] = useState(false);\r\n    const [passw, setpassw] = useState(false);\r\n    const [userInfo, setUserInfo] = useState(\"\");\r\n    let { width } = useWindowDimensions();\r\n    const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n    useEffect(() => {\r\n      serverIsRunning().then((isRunning) => {\r\n        if (isRunning) {\r\n          setserverError(false);\r\n        } else {\r\n          setserverError(true);\r\n        }\r\n      });\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (!auth) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const handleClose = (event, id) => {\r\n        if (event) { event.preventDefault(); }\r\n        if (id === \"1\") {\r\n            setShow(false);\r\n        }\r\n        else if (id === \"2\") {\r\n            setShow2(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleShow = (event, id) => {\r\n        setUserInfo(\"\");\r\n        if (event) { event.preventDefault(); }\r\n\r\n        if (passwordsOkay()) {\r\n            if (id === \"changeButton\") {\r\n                setShow(true);\r\n            }\r\n            else if (id === \"deleteButton\") {\r\n                setShow2(true);\r\n            }\r\n            setChanged(false);\r\n        }\r\n\r\n    }\r\n\r\n    const passwordsOkay = () => {\r\n        // Does user want to change password?\r\n        if ((newpassword.current.value !== \"\")) {\r\n            // When second password is not entered\r\n            if (newpassword2.current.value === \"\") {\r\n                setUserInfo(\"The password has to be entered twice.\");\r\n            } else /* When both passwords are entered */ {\r\n                // If passwords match\r\n                if (newpassword2.current.value === newpassword.current.value) {\r\n                    return true;\r\n                } else /* If passwords don't match */ {\r\n                    setUserInfo(\"Passwords don't match!\");\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        if (event) { event.preventDefault(); }\r\n        if (newpassword.current.value !== \"\") {\r\n            setpassw(true)\r\n        } else {\r\n            setpassw(false)\r\n        }\r\n    }\r\n\r\n    const cleanResponse = (obj) => {\r\n        for (let propName in obj) {\r\n            if (obj[propName] === null || obj[propName] === undefined || obj[propName] === \"\") {\r\n                delete obj[propName];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const changeInformation = async (event) => {\r\n        if (event) { event.preventDefault(); }\r\n        let toSend;\r\n        if (newpassword.current.value !== \"\") {\r\n            if (newpassword2.current.value === newpassword.current.value) {\r\n                toSend = {\r\n                    username: newName.current.value,\r\n                    password: newpassword.current.value,\r\n                    right_guesses_in_a_row: newProgress.current.value\r\n                }\r\n                console.log(toSend);\r\n            }\r\n        }\r\n        else {\r\n            toSend = {\r\n                username: newName.current.value,\r\n                right_guesses_in_a_row: newProgress.current.value\r\n\r\n            }\r\n\r\n        }\r\n        cleanResponse(toSend)\r\n\r\n        const res = await api.user.editUser(user, toSend);\r\n        if (res.data.success) {\r\n            setChanged(true);\r\n        }\r\n    }\r\n\r\n    const deleteAccount = async (event) => {\r\n        const res = await api.user.deleteUser(user);\r\n        if (res.data.success) {\r\n            setChanged(true);\r\n            await setAuth(false);\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        {serverError ? (\r\n          <Redirect to=\"/Error\" />\r\n          ) : (\r\n        <div id=\"content\" className=\"settings margin_top\">\r\n            <NavigationTop width={width} />\r\n            {width < 700 && <NavigationBottom />}\r\n            <form>\r\n                <h1 className=\"margin_top_small\">Settings</h1>\r\n                <h2 className={\"lead\"}>Choose the property that you want to change</h2>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">How many correct answers\r\n                        in a row lead to a new progress level?</label>\r\n                    <input type=\"number\" className=\"form-control col-lg-8 col-xs-12\" id=\"settings\" placeholder=\"\"\r\n                        ref={newProgress} />\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">Change username</label>\r\n                    <input type=\"text\" className=\"form-control col-lg-8 col-xs-12\" id=\"settings\" placeholder=\"\"\r\n                        ref={newName} />\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">Change password</label>\r\n                    <input type=\"password\" className=\"form-control col-lg-8 col-xs-12\" id=\"settings\" placeholder=\"\" onChange={handleOnChange}\r\n                        ref={newpassword} />\r\n                </div>\r\n                {passw && <div className=\"form-group row\">\r\n                    <label className=\"col-lg-4 col-xs-12 no-padding-left\" htmlFor=\"settings\">Re-enter password</label>\r\n                    <input type=\"password\" className=\"form-control col-lg-8 col-xs-12\" id=\"settings\" placeholder=\"\"\r\n                        ref={newpassword2} />\r\n                </div>}\r\n                <div className=\"warning\">{userInfo}</div>\r\n                <button className=\"btn btn-primary\" onClick={(e) => handleShow(e, \"changeButton\")}>Save settings</button>\r\n            </form>\r\n\r\n            <Button variant={\"danger\"} style={{ marginTop: \"1em\" }} onClick={(e) => handleShow(e, \"deleteButton\")}>Delete Account</Button>\r\n\r\n\r\n            <Modal show={show} onHide={(e) => handleClose(e, \"1\")}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Warning</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{changed ? 'Changed.' : 'Are you sure that you want to save these changes?'}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={(e) => handleClose(e, \"1\")}>\r\n                        Close\r\n                    </Button>\r\n                    {!changed && <Button variant=\"primary\" onClick={changeInformation}>\r\n                        Save Changes\r\n                    </Button>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={show2} onHide={(e) => handleClose(e, \"2\")}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Warning</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{changed ? 'Account Deleted.' : 'Are you sure that you want to delete this account?'}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={(e) => handleClose(e, \"2\")}>\r\n                        Close\r\n                    </Button>\r\n                    {!changed && <Button variant=\"danger\" onClick={deleteAccount}>\r\n                        Delete Account\r\n                    </Button>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"reactn\";\r\n\r\nconst Pagination = ({ vocabsPerPage, totalVocabs, paginate }) => {\r\n    const pageNumbers = [];\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    for (let i = 1; i <= Math.ceil(totalVocabs / vocabsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    const handleClick = (number) => {\r\n        paginate(number);\r\n        setCurrentPage(number);\r\n    }\r\n\r\n    const checkIfCurrentPage = (number) => {\r\n        if (currentPage === number) {\r\n            return \"page_link_active\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"margin_top\">\r\n            <ul className=\"pagination\">\r\n                {\r\n                    pageNumbers.map(number => (\r\n                        <li key={number} className=\"page-item\">\r\n                            <span onClick={() => handleClick(number) } className={\"page-link page_link \" + checkIfCurrentPage(number)}>\r\n                                {number}\r\n                            </span>\r\n                        </li>\r\n\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useGlobal, useEffect } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getTranslation = async (english_word, lang_id, user) => {\r\n  const data = {\r\n    english_word: english_word,\r\n    lang_id: lang_id,\r\n    user_id: user,\r\n  };\r\n\r\n  const res = await api.vocab.getVocabAndTranslation(data);\r\n  return res.translation;\r\n};\r\n\r\nconst VocabRow = ({ english_word, progress, even }) => {\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [user] = useGlobal(\"user\");\r\n  const [translation, setTranslation] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getTranslation(english_word, langID, user).then((data) => {\r\n      setTranslation(data);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"row vocabulary_list_entry\"}>\r\n      <div className={\"col-xl-2 col-lg-2 col-md-3 col-4\" + (even ? \" blue_background\" : \"\")}>\r\n        {english_word}\r\n      </div>\r\n      <div className={\"col-xl-2 col-lg-2 col-md-3 col-4\" + (even ? \" blue_background\" : \"\")}>\r\n        {translation}\r\n      </div>\r\n      <div className={\"col-xl-1 col-lg-2 col-md-3 col-4\" + (even ? \" blue_background\" : \"\")}>\r\n        {progress}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabRow;\r\n","import React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport { Redirect } from \"react-router\";\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport VocabRow from \"../components/VocabRow\";\r\nimport api from \"../api\";\r\nimport serverIsRunning from \"../helper\"\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\nconst getProgressForUserAndLanguage = async (user_id, lang_id) => {\r\n  try {\r\n    const data = {\r\n      user_id: user_id,\r\n      lang_id: lang_id,\r\n    };\r\n    const res = await api.progress.getProgressForUserAndLanguage(data);\r\n    if (res.length < 50) {\r\n      // true if all words created\r\n      await createBasicVocab(user_id, lang_id);\r\n      return getProgressForUserAndLanguage(user_id, lang_id);\r\n    }\r\n    return res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst createBasicVocab = async (user, id) => {\r\n  const basics = require(\"../basic_vocab.json\");\r\n  const vocabulary = basics.vocabulary;\r\n\r\n  Object.entries(vocabulary).forEach(async ([index, word]) => {\r\n    const data = {\r\n      language_id: id,\r\n      english_word: word,\r\n      user_id: user,\r\n    };\r\n      const res = await api.vocab.insert(data);\r\n      if(res.status === 200){\r\n        api.progress.createProgress(data);\r\n      }\r\n  });\r\n  return true;\r\n};\r\n\r\nconst VocabularyList = (props) => {\r\n  const [auth] = useGlobal(\"auth\");\r\n  const [user] = useGlobal(\"user\");\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [langName] = useGlobal(\"langName\");\r\n  const [serverError, setserverError] = useGlobal(\"serverError\")\r\n  \r\n  const [prog, setProg] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  let { width } = useWindowDimensions();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [vocabsPerPage] = useState(50);\r\n\r\n  useEffect(() => {\r\n    getProgressForUserAndLanguage(user, langID).then((data) => {\r\n      setProg(data);\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      console.log(\"Landing -> isRunning\", isRunning);\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  var key = 0;\r\n\r\n  const indexOfLastVocab = currentPage * vocabsPerPage;\r\n  const indexOfFirstVocab = indexOfLastVocab - vocabsPerPage;\r\n  const currentVocabs = prog ? prog.slice(indexOfFirstVocab, indexOfLastVocab) : null;\r\n\r\n  // Change page\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  //TODO catch data as json from database\r\n  return (\r\n    <>\r\n    {serverError ? (\r\n          <Redirect to=\"/Error\" />\r\n          ) : (\r\n\r\n    <div id=\"content\" className=\"vocabulary_list\">\r\n      <NavigationTop width={width} />\r\n      {width < 700 && <NavigationBottom page={\"VocabularyList\"} />}\r\n      <div id=\"vocabulary_list\">\r\n        <h1 className=\"margin_top_small\">Vocabulary overview</h1>\r\n        <div className=\"row vocabulary_list_entry\">\r\n          <div className=\"col-xl-2 col-lg-2 col-md-3 col-4 vocabulary_list_header\">English</div>\r\n          <div className=\"col-xl-2 col-lg-2 col-md-3 col-4 vocabulary_list_header\">{langName}</div>\r\n          <div className=\"col-xl-1 col-lg-2 col-md-3 col-4 vocabulary_list_header\">Progress</div>\r\n        </div>\r\n\r\n        {!loading && currentVocabs && currentVocabs.length > 0 ? (\r\n          currentVocabs.map((progressObject) => {\r\n            return (\r\n              <VocabRow\r\n                key={new Date().getTime() + key++}\r\n                english_word={progressObject.english_word}\r\n                progress={progressObject.progress}\r\n                translation=\"\"\r\n                even={key % 2 === 0 ? true : false}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <div className=\"spinner-border m-5\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        )}\r\n        <Pagination vocabsPerPage={vocabsPerPage} totalVocabs={prog.length} paginate={paginate} />\r\n      </div>\r\n    </div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VocabularyList;\r\n","import React, { useGlobal, useState } from \"reactn\";\r\n\r\nconst VocabularyTraining_Options = (props) => {\r\n  const [language,] = useGlobal(\"langName\");\r\n  const [vocabNumber, setVocabNumber] = useState(25);\r\n  const [progress1, setProgress1] = useState(true);\r\n  const [progress2, setProgress2] = useState(true);\r\n  const [progress3, setProgress3] = useState(true);\r\n  const [training_options_radios, setTraining_options_radios] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { receiveInput } = props;\r\n    receiveInput({ vocabNumber, progress1, progress2, progress3, training_options_radios });\r\n    props.onClick();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    switch (name) {\r\n      case \"vocabNumber\":\r\n        setVocabNumber(value);\r\n        break;\r\n      case \"progress1\":\r\n        setProgress1(!progress1);\r\n        break;\r\n\r\n      case \"progress2\":\r\n        setProgress2(!progress2);\r\n        break;\r\n\r\n      case \"progress3\":\r\n        setProgress3(!progress3);\r\n        break;\r\n      case \"training_options_radios\":\r\n        setTraining_options_radios(value);\r\n        break;\r\n\r\n      default:\r\n        console.error(\"Oh..\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const { showButton } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Please set your training prefrences</h2>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12\" htmlFor=\"training_options_amount\">\r\n          How many vocabulary do you want to practise?\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control col-12\"\r\n            id=\"training_options_amount\"\r\n            defaultValue={25}\r\n            name=\"vocabNumber\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12\" htmlFor=\"training_options_amount\">\r\n          Train vocabulary with following progress:\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress1}\r\n              id=\"training_options_check_1\"\r\n              name=\"progress1\"\r\n              checked={progress1}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_1\">\r\n              1\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress2}\r\n              id=\"training_options_check_2\"\r\n              name=\"progress2\"\r\n              checked={progress2}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_2\">\r\n              2\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={progress3}\r\n              id=\"training_options_check_2\"\r\n              name=\"progress3\"\r\n              checked={progress3}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_check_2\">\r\n              3\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-lg-4 col-xs-12 no_padding_left\" htmlFor=\"training_options_direction\">\r\n          Direction\r\n        </label>\r\n        <div className=\"col-lg-8 col-xs-12\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"training_options_radios\"\r\n              id=\"training_options_radios_1\"\r\n              value=\"fo_en\"\r\n              defaultChecked={true}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_radios_1\">\r\n              {`Show English, ask ${language}`}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"training_options_radios\"\r\n              id=\"training_options_radios_2\"\r\n              value=\"en_fo\"\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"training_options_radios_2\">\r\n              {`Show ${language}, ask English`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showButton ? (\r\n        <button type=\"submit\" className=\"btn btn-primary margin_top\">\r\n          Start training\r\n        </button>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Options;\r\n","import React, { useState, useEffect, useGlobal } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getProgress = async (query) => {\r\n  const res = await api.progress.filterProgress(query);\r\n  return res;\r\n};\r\n\r\nconst getVocabsById = async (id) => {\r\n  const res = await api.vocab.getVocabById(id);\r\n  return res;\r\n};\r\n\r\nconst VocabularyTraining_Queries = (props) => {\r\n  const [trainingVorab, setTrainingVorab] = useState([]);\r\n  const [langID] = useGlobal(\"langID\");\r\n  const [progress] = useGlobal(\"progress\");\r\n  const [summary, setSummary] = useGlobal(\"summary\");\r\n  const [user] = useGlobal(\"user\");\r\n  const [progressSetting] = useGlobal(\"progressSetting\");\r\n  const [direction] = useGlobal(\"direction\");\r\n\r\n  const [falseInputCount, setFalseInputCount] = useState(0);\r\n  const [help, setHelp] = useState(null);\r\n  const [input, setInput] = useState(\"\");\r\n  const [iterate, setIterate] = useState(0);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n      const query = { user_id: user, language_id: langID, progress: progress };\r\n      getProgress(query).then((data) => {\r\n        if (data && data.success) {\r\n          getTrainingVocab(data.data);\r\n  \r\n          // reset Summary\r\n          setSummary([]);\r\n        }\r\n      });\r\n  \r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSkip = () => {\r\n    setHelp(\"\");\r\n    setFalseInputCount(0);\r\n    setIterate(iterate + 1);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const currentWord = trainingVorab[iterate];\r\n    const localSummary = summary;\r\n    localSummary.push({ currentWord, input });\r\n    setSummary(localSummary);\r\n\r\n    const idObj = {\r\n      user_id: user,\r\n      english_word: currentWord.english_word,\r\n      lang_id: langID,\r\n    };\r\n\r\n    if (input) {\r\n      let wellJustFakeIt = false;\r\n      let correct;\r\n\r\n      if (!currentWord.translation[langID]) {\r\n        // TODO: WHY CAN THIS EVEN HAPPEN? IT SHOULD NOT APPEAR FOR THIS LANGUAGE THEN!!!\r\n        console.error(\"Word not found in current language.\");\r\n        wellJustFakeIt = true;\r\n      } else {\r\n        correct =\r\n          direction === \"fo_en\"\r\n            ? input.toLowerCase().trim() === currentWord.translation[langID].toLowerCase()\r\n            : input.toLowerCase().trim() === currentWord.english_word.toLowerCase();\r\n      }\r\n\r\n      if (correct || wellJustFakeIt) {\r\n        // Word correct\r\n        // TODO: graphic reaction\r\n        setIterate(iterate + 1);\r\n        setInput(\"\");\r\n        setHelp(\"\");\r\n        setFalseInputCount(0);\r\n\r\n        // progressObj contains the ProgressObj before the update!\r\n        const progressObj = await api.progress.increaseRGIAR(idObj);\r\n\r\n        if (progressObj.progress === 1) {\r\n          if (progressObj.right_guesses_in_a_row === progressSetting - 1) {\r\n            api.progress.increaseProgress(idObj);\r\n            console.info(\"%c Progress updated!\", \"Background: #00ff55\");\r\n          }\r\n        } else if (progressObj.progress === 2) {\r\n          if (\r\n            progressObj.right_guesses_in_a_row === progressSetting - 1 ||\r\n            progressObj.right_guesses_in_a_row === progressSetting * 2 - 1\r\n          ) {\r\n            api.progress.increaseProgress(idObj);\r\n            console.info(\"%c Progress updated!\", \"Background: #33ff77\");\r\n          }\r\n        } else {\r\n          console.info(\"%c Maximum Progress level already achieved!\", \"Background: #0f0\");\r\n        }\r\n      } else {\r\n        api.progress.resetRGIAR(idObj);\r\n        setHelp(\"Unfortunately not correct! Please try again.\");\r\n        const newInputCount = falseInputCount + 1;\r\n        setFalseInputCount(newInputCount);\r\n        if (falseInputCount >= 1) {\r\n          const translationByDirection =\r\n            props.direction === \"fo_en\"\r\n              ? currentWord.translation[langID]\r\n              : currentWord.english_word;\r\n          setHelp(`Correct translation: ${translationByDirection} \\nPlease type it in to increase your learning effect.`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInput(inputValue);\r\n  };\r\n\r\n  const getTrainingVocab = async (sortedVocab) => {\r\n    const numberOfVocab = props.numberOfVocabs;\r\n\r\n    // VocabIds Aus DB:Progresses\r\n    const en_words = [];\r\n    sortedVocab.forEach((vocab) => {\r\n      en_words.push(vocab.english_word);\r\n    });\r\n\r\n    // Vocabs from DB:Vocabs\r\n    const vocabFromDb = await getVocabsById(en_words).then((data) => {\r\n      return data.data;\r\n    });\r\n\r\n    const vocabChoice = [];\r\n    if (vocabFromDb.length < numberOfVocab) {\r\n      setMessage(`Your selection contains only ${vocabFromDb.length} words.`);\r\n      resetMessageIn5s();\r\n    }\r\n\r\n    while (vocabChoice.length < vocabFromDb.length && vocabChoice.length < numberOfVocab) {\r\n      const number = Math.floor(Math.random() * vocabFromDb.length + 0);\r\n      if (!vocabChoice.includes(vocabFromDb[number])) {\r\n        vocabChoice.push(vocabFromDb[number]);\r\n      }\r\n    }\r\n    setTrainingVorab(vocabChoice);\r\n  };\r\n\r\n  const renderTrainingVocab = () => {\r\n    if (trainingVorab[iterate]) {\r\n      if (props.direction === \"fo_en\") {\r\n        // default\r\n        return trainingVorab[iterate][\"english_word\"];\r\n      }\r\n      return trainingVorab[iterate].translation[langID];\r\n    }\r\n    return \"error\";\r\n  };\r\n\r\n  const resetMessageIn5s = () => {\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"margin_top\">\r\n      {iterate < trainingVorab.length ? (\r\n        <form>\r\n          {message ? <p className=\"bg-warning p-1\">{message}</p> : null}\r\n          <h2>{`Translate! ${iterate + 1}/${trainingVorab.length}`}</h2>\r\n          <div className=\"form-group row\">\r\n            <label\r\n              className=\"col-lg-3 col-xs-12 no-padding-left\"\r\n              htmlFor=\"train_vocabulary_translation\"\r\n            >\r\n              {renderTrainingVocab()}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-lg-9 col-xs-12\"\r\n              id=\"train_vocabulary_translation\"\r\n              placeholder=\"type in translation\"\r\n              name=\"translationInput\"\r\n              onChange={handleInput}\r\n              value={input}\r\n            />\r\n          </div>\r\n          {help ? <p className=\"alert-warning\">{help}</p> : null}\r\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>\r\n            Submit and continue\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary ml-1\" onClick={handleSkip}>\r\n            Skip\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div>Completed! Show summary?</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Queries;\r\n","import React, { useEffect, useState } from \"reactn\";\r\nimport api from \"../api\";\r\n\r\nconst getProgress = async (english_word, user, langID) => {\r\n  const data = await api.progress.searchProgress({ english_word, user_id: user, language_id: langID });\r\n  try {\r\n    return data.progress;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n  return -1;\r\n};\r\n\r\nconst SummaryRow = (props) => {\r\n  const { vocab, input, correct, english_word, user, langID } = props;\r\n  const [progress, setProgress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getProgress(english_word, user, langID).then((data) => {\r\n      setProgress(data);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`summary_list_entry ${\r\n        correct.toLowerCase().trim() === input.toLowerCase().trim() ? \"right\" : \"wrong\"\r\n        }`}\r\n    >\r\n\r\n      {\r\n        props.width > 700 ?\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">{vocab}</div>\r\n            <div className=\"col-3\">{input}</div>\r\n            <div className=\"col-3\">{correct}</div>\r\n            <div className=\"col-3\">{progress}</div>\r\n          </div>\r\n          :\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Given word: </div>\r\n              <div className=\"col-6\">{vocab}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Your translation: </div>\r\n              <div className=\"col-6\">{input}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Correct translation: </div>\r\n              <div className=\"col-6\">{correct}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6 bold\">Current progress: </div>\r\n              <div className=\"col-6\">{progress}</div>\r\n            </div>\r\n          </>\r\n      }\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default SummaryRow;\r\n","import React, { useGlobal } from \"reactn\";\r\nimport SummaryRow from \"../components/SummaryRow\";\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\n\r\n\r\nconst VocabularyTraining_Summary = (props) => {\r\n  const [summary,] = useGlobal(\"summary\");\r\n  const [langID,] = useGlobal(\"langID\");\r\n  const [user] = useGlobal(\"user\");\r\n  let { width } = useWindowDimensions();\r\n\r\n  let i = 0;\r\n\r\n  return (\r\n    <div id=\"training_summary\" className=\"margin_top\">\r\n      <h2>Training summary</h2>\r\n\r\n      {width > 700 ?\r\n        <div className=\"row vocabulary_list_entry\">\r\n          <div className=\"col-3 vocabulary_list_header\">Given word</div>\r\n          <div className=\"col-3 vocabulary_list_header\">Your translation</div>\r\n          <div className=\"col-3 vocabulary_list_header\">Correct translation</div>\r\n          <div className=\"col-3 vocabulary_list_header\">Current Progress</div>\r\n        </div>\r\n        :\r\n        <div></div>\r\n      }\r\n\r\n      {summary.map((entry) => {\r\n        const test = entry.currentWord.translation[langID]\r\n          ? entry.currentWord.translation[langID]\r\n          : \"HOOOOOOW\";\r\n        i++;\r\n        return (\r\n          <SummaryRow\r\n            key={i++}\r\n            vocab={entry.currentWord.english_word}\r\n            input={entry.input}\r\n            correct={test}\r\n            english_word={entry.currentWord.english_word}\r\n            langID={langID}\r\n            user={user}\r\n            width={width}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyTraining_Summary;\r\n","import React, { useGlobal, useState, useEffect } from \"reactn\";\r\nimport \"../style.scss\";\r\nimport NavigationBottom from \"../components/NavigationBottom\";\r\nimport NavigationTop from \"../components/NavigationTop\";\r\nimport Options from \"../components/VocabularyTraining_Options\";\r\nimport Queries from \"../components/VocabularyTraining_Queries\";\r\nimport Summary from \"../components/VocabularyTraining_Summary\";\r\nimport serverIsRunning from \"../helper\"\r\nimport useWindowDimensions from \"../components/Windowsize\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nfunction VocabularyTraining() {\r\n  const [auth, ] = useGlobal(\"auth\");\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const [showQueries, setShowQueries] = useState(false);\r\n  const [showSummary, setShowSummary] = useState(false);\r\n  const [buttonState, setButtonState] = useState(\"options\");\r\n  const [buttonText, setButtonText] = useState(\"Start training\");\r\n  const [savedSettings, setSavedSettings] = useState(false);\r\n  const [numberOfVocab, setNumberOfVocab] = useGlobal(\"numberOfVocab\");\r\n  const [progress, setProgress] = useGlobal(\"progress\");\r\n  const [direction, setDirection] = useGlobal(\"direction\");\r\n  const [language, ] = useGlobal(\"language\");\r\n  let {width} = useWindowDimensions();\r\n  const [serverError, setserverError] = useGlobal(\"serverError\")\r\n\r\n  useEffect(() => {\r\n    serverIsRunning().then((isRunning) => {\r\n      if (isRunning) {\r\n        setserverError(false);\r\n      } else {\r\n        setserverError(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (!auth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const changeView = () => {\r\n    if (buttonState === \"options\") {\r\n      setButtonState(\"queries\");\r\n      setShowOptions(false);\r\n      setShowQueries(true);\r\n      setShowSummary(false);\r\n      setButtonText(\"Stop training\");\r\n    } else if (buttonState === \"queries\") {\r\n      setButtonState(\"summary\");\r\n      setShowOptions(false);\r\n      setShowQueries(false);\r\n      setShowSummary(true);\r\n      setButtonText(\"Start new training\");\r\n    } else if (buttonState === \"summary\") {\r\n      setButtonState(\"options\");\r\n      setShowOptions(true);\r\n      setShowQueries(false);\r\n      setShowSummary(false);\r\n      setButtonText(\"Start training\");\r\n      setSavedSettings(false);\r\n    }\r\n  };\r\n\r\n  const receiveInput = (input) => {\r\n    setSavedSettings(true);\r\n    if (input.vocabNumber === 0){\r\n      setNumberOfVocab(25);\r\n    } else {\r\n      setNumberOfVocab(input.vocabNumber);\r\n    }\r\n    const progressArray = [];\r\n    if (input.progress1) {\r\n      progressArray.push(1);\r\n    }\r\n    if (input.progress2) {\r\n      progressArray.push(2);\r\n    }\r\n    if (input.progress3) {\r\n      progressArray.push(3);\r\n    }\r\n    setProgress(progressArray);\r\n    if (input.training_options_radios) {\r\n      setDirection(input.training_options_radios);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {serverError ? (\r\n        <Redirect to=\"/Error\" />\r\n      ) : (\r\n        <div id=\"content\" className=\"vocabulary_training\">\r\n          <NavigationTop width={width} />\r\n          {width < 700 && <NavigationBottom page={\"VocabularyTraining\"} />}\r\n          <h1 className=\"margin_top_small\">Vocabulary Training</h1>\r\n          {showOptions && !savedSettings ? (\r\n            <Options receiveInput={receiveInput} showButton={!savedSettings} onClick={changeView} />\r\n          ) : null}\r\n          {showQueries ? (\r\n            <Queries\r\n              show={false}\r\n              numberOfVocabs={numberOfVocab}\r\n              progress={progress}\r\n              direction={direction}\r\n              language={language}\r\n            />\r\n          ) : null}\r\n          {showSummary ? <Summary show={false} /> : null}\r\n          {savedSettings ? (\r\n            <button type=\"button\" className=\"btn btn-primary margin_top\" onClick={changeView}>\r\n              {`${buttonText}`}\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VocabularyTraining;\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport AddVocabulary from './pages/AddVocabulary'\r\nimport Error from './pages/ErrorPage'\r\nimport Landing from \"./pages/Landing\"\r\nimport Languages from './pages/Languages'\r\nimport Settings from './pages/Settings'\r\nimport VocabularyList from './pages/VocabularyList'\r\nimport VocabularyTraining from './pages/VocabularyTraining'\r\n\r\n\r\n\r\nconst Routes = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route path='/Languages' component={Languages} />\r\n            <Route path='/VocabularyList' component={VocabularyList} />\r\n            <Route path='/AddVocabulary' component={AddVocabulary} />\r\n            <Route path='/VocabularyTraining' component={VocabularyTraining} />\r\n            <Route path='/Settings' component={Settings} />\r\n            <Route path='/*' component={Error} />\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Routes\r\n","import React from \"reactn\";\r\nimport Router from \"./Router\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport './customs.scss';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Container>\r\n                <Router/>\r\n            </Container>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React, { setGlobal } from \"reactn\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\n\r\n// FIXME: FOR DEV REASONS SET ON TRUE, BUT SET FALSE FOR PRODUCTIVE!\r\n// FIXME: REMOVE USERID AND LANGNAME AND LANGID BEFORE RELEASE!\r\nsetGlobal({\r\n  auth: false,\r\n  user: \"5ee0e6472be0845b1432ee44\",\r\n  progress: [1],\r\n  numberOfVocab: 25,\r\n  direction: \"fo_en\",\r\n  langName: \"German\",\r\n  langID: \"de\",\r\n  summary: [],\r\n  progressSetting: 3,\r\n  serverError: false,\r\n});\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/003-plus.fbcff910.svg\";","module.exports = __webpack_public_path__ + \"static/media/007-bearbeiten.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-liste.ad43a8d6.svg\";"],"sourceRoot":""}